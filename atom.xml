<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>arunyang</title>
  
  <subtitle>Linux,Golang,JS,Java</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.arunyang.com/"/>
  <updated>2018-07-03T11:54:19.000Z</updated>
  <id>http://www.arunyang.com/</id>
  
  <author>
    <name>arunyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://www.arunyang.com/2018/07/03/008%E8%AF%BE%E4%BB%B68fs/"/>
    <id>http://www.arunyang.com/2018/07/03/008课件8fs/</id>
    <published>2018-07-03T01:03:34.000Z</published>
    <updated>2018-07-03T11:54:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>#fs模块</p><p>##1.1</p><p>###1.1.1 readFile函数</p><blockquote><p><a href="http://nodejs.cn/api/fs.html#fs_fs_readfile_path_options_callback" target="_blank" rel="noopener">readFile官网文档</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat 1.txt</span><br><span class="line">1234567890</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>cat 1.reaFile.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">//是把整个文件作为一个整体</span></span><br><span class="line">fs.readFile(<span class="string">'../1.txt'</span>,&#123;<span class="attr">encoding</span>:<span class="string">'utf8'</span>&#125;,<span class="function"><span class="keyword">function</span> (<span class="params">err,data</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(err);<span class="comment">//输出=&gt; 1234567890</span></span><br><span class="line"><span class="built_in">console</span>.log(data);<span class="comment">//输出=&gt; null</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//同步方法是没有回调函数的</span></span><br><span class="line"><span class="keyword">let</span> result=fs.readFileSync(<span class="string">'../1.txt'</span>,&#123;<span class="attr">encoding</span>: <span class="string">'utf8'</span>&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);<span class="comment">//输出=&gt; 1234567890</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="1-1-2-readFile函数"><a href="#1-1-2-readFile函数" class="headerlink" title="1.1.2 readFile函数"></a>1.1.2 readFile函数</h3><blockquote><p><a href="http://nodejs.cn/api/fs.html#fs_fs_writefile_file_data_options_callback" target="_blank" rel="noopener">readFile官网文档</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">//异步方法</span></span><br><span class="line">fs.writeFile(<span class="string">'./2.txt'</span>,<span class="string">'this is a test'</span>,&#123;<span class="attr">encoding</span>: <span class="string">'utf8'</span>&#125;,(err) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'write OK'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//同步方法</span></span><br><span class="line">fs.writeFileSync(<span class="string">'./3.txt'</span>,<span class="string">'this is an example!!'</span>);</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat ./2.txt</span><br><span class="line">this is a test</span><br><span class="line">cat ./3.txt</span><br><span class="line">this is an example!!</span><br></pre></td></tr></table></figure><h3 id="1-1-3-copy函数实现"><a href="#1-1-3-copy函数实现" class="headerlink" title="1.1.3 copy函数实现"></a>1.1.3 copy函数实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">src,dest,cb</span>) </span>&#123;</span><br><span class="line">fs.readFile(src,(err,data) =&gt; &#123;</span><br><span class="line">fs.writeFile(dest,data,cb);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">copy(<span class="string">'../3.txt'</span>,<span class="string">'../4.txt'</span>,() =&gt; &#123;  <span class="comment">//直接清空4.txt内容然后覆盖</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'拷贝完成'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>执行效果</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat 3.txt</span><br><span class="line">456</span><br><span class="line">cat 4.txt</span><br><span class="line">456</span><br></pre></td></tr></table></figure></p><h3 id="1-1-4-向文件中追加内容的两种方式"><a href="#1-1-4-向文件中追加内容的两种方式" class="headerlink" title="1.1.4 向文件中追加内容的两种方式"></a>1.1.4 向文件中追加内容的两种方式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">//&lt;1&gt;第一种向文件中追加内容方式</span></span><br><span class="line"><span class="comment">//writeFile flags=w 写入，如果文件已经存在，则删除掉文件后再写入</span></span><br><span class="line">fs.writeFile(<span class="string">'./4.txt'</span>,<span class="string">'789'</span>,&#123;<span class="attr">flag</span>:<span class="string">'a'</span>&#125;);   <span class="comment">//打开文件用于追加。如果文件不存在则创建文件</span></span><br><span class="line"><span class="comment">//&lt;2&gt;第二种向文件中追加内容方式</span></span><br><span class="line">fs.appendFile(<span class="string">'./4.txt'</span>,<span class="string">'789'</span>);</span><br></pre></td></tr></table></figure><h3 id="1-1-5-open函数的fd文件描述符"><a href="#1-1-5-open函数的fd文件描述符" class="headerlink" title="1.1.5 open函数的fd文件描述符"></a>1.1.5 open函数的fd文件描述符</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">//fd file descriptor 文件描述符 是一个数字或者说索引</span></span><br><span class="line">fs.open(<span class="string">'../5.txt'</span>,<span class="string">'r'</span>,(err,fd) =&gt; &#123;</span><br><span class="line"><span class="built_in">console</span>.log(fd);  <span class="comment">//输出=&gt; 11</span></span><br><span class="line">fs.open(<span class="string">'../4.txt'</span>,<span class="string">'r'</span>,(err,fd) =&gt; &#123;</span><br><span class="line"><span class="built_in">console</span>.log(fd); <span class="comment">//输出=&gt; 12</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="1-1-5-fs-open的buffer方式读取"><a href="#1-1-5-fs-open的buffer方式读取" class="headerlink" title="1.1.5 fs.open的buffer方式读取"></a>1.1.5 fs.open的buffer方式读取</h3><blockquote><p>fs.read几个参数详解<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat 6.txt</span><br><span class="line">饿了么外卖还行实验下</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">//1.文件太大，不能整个放到内存里边</span></span><br><span class="line"><span class="comment">//2.文件大小未知</span></span><br><span class="line">fs.open(<span class="string">'../6.txt'</span>,<span class="string">'r'</span>,<span class="number">0666</span>,(err,fd) =&gt; &#123;</span><br><span class="line"><span class="keyword">let</span> buffer=Buffer.alloc(<span class="number">12</span>);<span class="comment">//[0,1,2,3,4,5] 只能容下3个字</span></span><br><span class="line">fs.read(fd,buffer,<span class="number">0</span>,<span class="number">12</span>,<span class="number">9</span>,(err,bytesRead) =&gt; &#123;  <span class="comment">//length读取的字节不够的话剩下的会乱码</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.从 fd 指定的文件中读取数据。</span></span><br><span class="line"><span class="comment">2.buffer 是数据将被写入到的 buffer。</span></span><br><span class="line"><span class="comment">3.offset 是 buffer 中开始写入的偏移量。</span></span><br><span class="line"><span class="comment">4.length 是一个整数，指定要读取的字节数。</span></span><br><span class="line"><span class="comment">        5.position 指定从文件中开始读取的位置。 如果 position 为 null，</span></span><br><span class="line"><span class="comment">        则数据从当前文件读取位置开始读取，且文件读取位置会被更新。 如果 position 为一个整数，则文件读取位置保持不变。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="built_in">console</span>.log(buffer.toString()); <span class="comment">//输出=&gt; 外卖还行</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>进一步解释:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line">fs.open(<span class="string">'../6.txt'</span>,<span class="string">'r'</span>,<span class="number">0666</span>,(err,fd) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> buffer=Buffer.alloc(<span class="number">12</span>);<span class="comment">//读取4个字的长度</span></span><br><span class="line">    <span class="comment">//从第3个字节开始读,即从"了"开始读,读取一个字</span></span><br><span class="line">    fs.read(fd,buffer,<span class="number">0</span>,<span class="number">6</span>,<span class="number">9</span>,(err,bytesRead) =&gt; &#123;  <span class="comment">//读取"外卖"</span></span><br><span class="line">        <span class="comment">//从第6个字节开始读,即从"么"开始读,读取一个字,并向后移动一个字,即3字节</span></span><br><span class="line">        fs.read(fd,buffer,<span class="number">6</span>,<span class="number">6</span>,<span class="number">15</span>,(err,byteRead) =&gt; &#123;  <span class="comment">//在buffer中偏移"外卖"2个字6字节的长度,从"还行"15字节出开始读2个字的长度</span></span><br><span class="line">            <span class="built_in">console</span>.log(buffer.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="1-1-10-执行一个函数"><a href="#1-1-10-执行一个函数" class="headerlink" title="1.1.10 执行一个函数"></a>1.1.10 执行一个函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params"></span>) </span>&#123; <span class="comment">//~和!都可</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure><h3 id="1-1-11-call和apply的区别"><a href="#1-1-11-call和apply的区别" class="headerlink" title="1.1.11 call和apply的区别"></a>1.1.11 call和apply的区别</h3><blockquote></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">fn.call(<span class="literal">null</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">fn.apply(<span class="literal">null</span>,[<span class="number">1</span>,<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><p><strong>输出</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br></pre></td><td class="code"><pre><span class="line">Object [global] &#123;</span><br><span class="line">  DTRACE_NET_SERVER_CONNECTION: [Function],</span><br><span class="line">  DTRACE_NET_STREAM_END: [Function],</span><br><span class="line">  DTRACE_HTTP_SERVER_REQUEST: [Function],</span><br><span class="line">  DTRACE_HTTP_SERVER_RESPONSE: [Function],</span><br><span class="line">  DTRACE_HTTP_CLIENT_REQUEST: [Function],</span><br><span class="line">  DTRACE_HTTP_CLIENT_RESPONSE: [Function],</span><br><span class="line">  global: [Circular],</span><br><span class="line">  process:</span><br><span class="line">   process &#123;</span><br><span class="line">     title: &apos;/usr/local/bin/node&apos;,</span><br><span class="line">     version: &apos;v10.3.0&apos;,</span><br><span class="line">     versions:</span><br><span class="line">      &#123; http_parser: &apos;2.8.0&apos;,</span><br><span class="line">        node: &apos;10.3.0&apos;,</span><br><span class="line">        v8: &apos;6.6.346.32-node.9&apos;,</span><br><span class="line">        uv: &apos;1.20.3&apos;,</span><br><span class="line">        zlib: &apos;1.2.11&apos;,</span><br><span class="line">        ares: &apos;1.14.0&apos;,</span><br><span class="line">        modules: &apos;64&apos;,</span><br><span class="line">        nghttp2: &apos;1.29.0&apos;,</span><br><span class="line">        napi: &apos;3&apos;,</span><br><span class="line">        openssl: &apos;1.1.0h&apos;,</span><br><span class="line">        icu: &apos;61.1&apos;,</span><br><span class="line">        unicode: &apos;10.0&apos;,</span><br><span class="line">        cldr: &apos;33.0&apos;,</span><br><span class="line">        tz: &apos;2018c&apos; &#125;,</span><br><span class="line">     arch: &apos;x64&apos;,</span><br><span class="line">     platform: &apos;darwin&apos;,</span><br><span class="line">     release:</span><br><span class="line">      &#123; name: &apos;node&apos;,</span><br><span class="line">        sourceUrl:</span><br><span class="line">         &apos;https://nodejs.org/download/release/v10.3.0/node-v10.3.0.tar.gz&apos;,</span><br><span class="line">        headersUrl:</span><br><span class="line">         &apos;https://nodejs.org/download/release/v10.3.0/node-v10.3.0-headers.tar.gz&apos; &#125;,</span><br><span class="line">     argv:</span><br><span class="line">      [ &apos;/usr/local/Cellar/node/10.3.0/bin/node&apos;,</span><br><span class="line">        &apos;/Users/00arunalldata00/009_mystudy/010_everest/001_Everest4/20180628/201804/7.fs/11.fn.js&apos; ],</span><br><span class="line">     execArgv: [],</span><br><span class="line">     env:</span><br><span class="line">      &#123; PATH:</span><br><span class="line">         &apos;/usr/local/opt/openssl/bin:/opt/vagrant/bin:/usr/local/sbin:/usr/local/opt/sqlite/bin:/usr/local/opt/openresty-openssl/bin:/usr/local/opt/icu4c/sbin:/usr/local/mysql/bin:/usr/local/opt/icu4c/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Applications/Wireshark.app/Contents/MacOS&apos;,</span><br><span class="line">        NVM_RC_VERSION: &apos;&apos;,</span><br><span class="line">        FORCE_COLOR: &apos;true&apos;,</span><br><span class="line">        ELECTRON_NO_ATTACH_CONSOLE: &apos;true&apos;,</span><br><span class="line">        DEBUG_COLORS: &apos;true&apos;,</span><br><span class="line">        npm_config_color: &apos;always&apos;,</span><br><span class="line">        MOCHA_COLORS: &apos;1&apos;,</span><br><span class="line">        VERSIONER_PYTHON_VERSION: &apos;2.7&apos;,</span><br><span class="line">        LOGNAME: &apos;arunyang&apos;,</span><br><span class="line">        NVM_NODEJS_ORG_MIRROR: &apos;https://nodejs.org/dist&apos;,</span><br><span class="line">        XPC_SERVICE_NAME: &apos;com.jetbrains.WebStorm.77156&apos;,</span><br><span class="line">        PWD:</span><br><span class="line">         &apos;/Users/00arunalldata00/009_mystudy/010_everest/001_Everest4/20180628/201804/7.fs&apos;,</span><br><span class="line">        NVM_CD_FLAGS: &apos;-q&apos;,</span><br><span class="line">        NVM_DIR: &apos;/Users/arunyang/.nvm&apos;,</span><br><span class="line">        SHELL: &apos;/bin/zsh&apos;,</span><br><span class="line">        PAGER: &apos;less&apos;,</span><br><span class="line">        LSCOLORS: &apos;Gxfxcxdxbxegedabagacad&apos;,</span><br><span class="line">        SECURITYSESSIONID: &apos;186a8&apos;,</span><br><span class="line">        OLDPWD: &apos;/Applications/WebStorm.app/Contents/bin&apos;,</span><br><span class="line">        VERSIONER_PYTHON_PREFER_32_BIT: &apos;no&apos;,</span><br><span class="line">        USER: &apos;arunyang&apos;,</span><br><span class="line">        ZSH: &apos;/Users/arunyang/.oh-my-zsh&apos;,</span><br><span class="line">        TMPDIR: &apos;/var/folders/wy/v0w9vkf52836x21w_jz2wzlh0000gn/T/&apos;,</span><br><span class="line">        SSH_AUTH_SOCK: &apos;/private/tmp/com.apple.launchd.eIAcy2rAQL/Listeners&apos;,</span><br><span class="line">        XPC_FLAGS: &apos;0x0&apos;,</span><br><span class="line">        NVM_IOJS_ORG_MIRROR: &apos;https://iojs.org/dist&apos;,</span><br><span class="line">        __CF_USER_TEXT_ENCODING: &apos;0x1F5:0x0:0x0&apos;,</span><br><span class="line">        Apple_PubSub_Socket_Render: &apos;/private/tmp/com.apple.launchd.hbi4VHrgDC/Render&apos;,</span><br><span class="line">        LESS: &apos;-R&apos;,</span><br><span class="line">        LC_CTYPE: &apos;&apos;,</span><br><span class="line">        HOME: &apos;/Users/arunyang&apos; &#125;,</span><br><span class="line">     pid: 3736,</span><br><span class="line">     features:</span><br><span class="line">      &#123; debug: false,</span><br><span class="line">        uv: true,</span><br><span class="line">        ipv6: true,</span><br><span class="line">        tls_alpn: true,</span><br><span class="line">        tls_sni: true,</span><br><span class="line">        tls_ocsp: true,</span><br><span class="line">        tls: true &#125;,</span><br><span class="line">     ppid: 3118,</span><br><span class="line">     execPath: &apos;/usr/local/Cellar/node/10.3.0/bin/node&apos;,</span><br><span class="line">     debugPort: 9229,</span><br><span class="line">     _startProfilerIdleNotifier: [Function: _startProfilerIdleNotifier],</span><br><span class="line">     _stopProfilerIdleNotifier: [Function: _stopProfilerIdleNotifier],</span><br><span class="line">     _getActiveRequests: [Function: _getActiveRequests],</span><br><span class="line">     _getActiveHandles: [Function: _getActiveHandles],</span><br><span class="line">     reallyExit: [Function: reallyExit],</span><br><span class="line">     abort: [Function: abort],</span><br><span class="line">     chdir: [Function: chdir],</span><br><span class="line">     cwd: [Function: cwd],</span><br><span class="line">     umask: [Function: umask],</span><br><span class="line">     getuid: [Function: getuid],</span><br><span class="line">     geteuid: [Function: geteuid],</span><br><span class="line">     setuid: [Function: setuid],</span><br><span class="line">     seteuid: [Function: seteuid],</span><br><span class="line">     setgid: [Function: setgid],</span><br><span class="line">     setegid: [Function: setegid],</span><br><span class="line">     getgid: [Function: getgid],</span><br><span class="line">     getegid: [Function: getegid],</span><br><span class="line">     getgroups: [Function: getgroups],</span><br><span class="line">     setgroups: [Function: setgroups],</span><br><span class="line">     initgroups: [Function: initgroups],</span><br><span class="line">     _kill: [Function: _kill],</span><br><span class="line">     _debugProcess: [Function: _debugProcess],</span><br><span class="line">     _debugEnd: [Function: _debugEnd],</span><br><span class="line">     hrtime: [Function: hrtime],</span><br><span class="line">     cpuUsage: [Function: cpuUsage],</span><br><span class="line">     dlopen: [Function: dlopen],</span><br><span class="line">     uptime: [Function: uptime],</span><br><span class="line">     memoryUsage: [Function: memoryUsage],</span><br><span class="line">     _rawDebug: [Function],</span><br><span class="line">     moduleLoadList:</span><br><span class="line">      [ &apos;Binding contextify&apos;,</span><br><span class="line">        &apos;NativeModule events&apos;,</span><br><span class="line">        &apos;NativeModule internal/async_hooks&apos;,</span><br><span class="line">        &apos;NativeModule internal/errors&apos;,</span><br><span class="line">        &apos;Binding uv&apos;,</span><br><span class="line">        &apos;Binding buffer&apos;,</span><br><span class="line">        &apos;Binding async_wrap&apos;,</span><br><span class="line">        &apos;Binding config&apos;,</span><br><span class="line">        &apos;Binding icu&apos;,</span><br><span class="line">        &apos;NativeModule util&apos;,</span><br><span class="line">        &apos;NativeModule internal/encoding&apos;,</span><br><span class="line">        &apos;NativeModule internal/util&apos;,</span><br><span class="line">        &apos;Binding constants&apos;,</span><br><span class="line">        &apos;Binding util&apos;,</span><br><span class="line">        &apos;NativeModule internal/util/types&apos;,</span><br><span class="line">        &apos;Internal Binding types&apos;,</span><br><span class="line">        &apos;NativeModule buffer&apos;,</span><br><span class="line">        &apos;NativeModule internal/buffer&apos;,</span><br><span class="line">        &apos;NativeModule internal/process&apos;,</span><br><span class="line">        &apos;NativeModule assert&apos;,</span><br><span class="line">        &apos;NativeModule internal/assert&apos;,</span><br><span class="line">        &apos;NativeModule fs&apos;,</span><br><span class="line">        &apos;NativeModule path&apos;,</span><br><span class="line">        &apos;NativeModule internal/constants&apos;,</span><br><span class="line">        &apos;Binding fs&apos;,</span><br><span class="line">        &apos;NativeModule stream&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/pipeline&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/end-of-stream&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/legacy&apos;,</span><br><span class="line">        &apos;NativeModule _stream_readable&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/buffer_list&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/destroy&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/state&apos;,</span><br><span class="line">        &apos;NativeModule _stream_writable&apos;,</span><br><span class="line">        &apos;NativeModule _stream_duplex&apos;,</span><br><span class="line">        &apos;NativeModule _stream_transform&apos;,</span><br><span class="line">        &apos;NativeModule _stream_passthrough&apos;,</span><br><span class="line">        &apos;Binding fs_event_wrap&apos;,</span><br><span class="line">        &apos;NativeModule internal/fs/utils&apos;,</span><br><span class="line">        &apos;NativeModule internal/url&apos;,</span><br><span class="line">        &apos;NativeModule internal/querystring&apos;,</span><br><span class="line">        &apos;Binding url&apos;,</span><br><span class="line">        &apos;NativeModule internal/process/warning&apos;,</span><br><span class="line">        &apos;NativeModule internal/process/next_tick&apos;,</span><br><span class="line">        &apos;NativeModule internal/process/promises&apos;,</span><br><span class="line">        &apos;NativeModule internal/fixed_queue&apos;,</span><br><span class="line">        &apos;NativeModule internal/process/stdio&apos;,</span><br><span class="line">        &apos;Binding performance&apos;,</span><br><span class="line">        &apos;Binding trace_events&apos;,</span><br><span class="line">        &apos;NativeModule internal/inspector_async_hook&apos;,</span><br><span class="line">        &apos;Binding inspector&apos;,</span><br><span class="line">        &apos;NativeModule timers&apos;,</span><br><span class="line">        &apos;Binding timer_wrap&apos;,</span><br><span class="line">        &apos;NativeModule internal/linkedlist&apos;,</span><br><span class="line">        &apos;NativeModule internal/timers&apos;,</span><br><span class="line">        &apos;NativeModule internal/modules/cjs/loader&apos;,</span><br><span class="line">        &apos;NativeModule vm&apos;,</span><br><span class="line">        &apos;NativeModule internal/modules/cjs/helpers&apos;,</span><br><span class="line">        &apos;NativeModule console&apos;,</span><br><span class="line">        &apos;Binding tty_wrap&apos;,</span><br><span class="line">        &apos;NativeModule net&apos;,</span><br><span class="line">        &apos;NativeModule internal/net&apos;,</span><br><span class="line">        &apos;Binding cares_wrap&apos;,</span><br><span class="line">        &apos;Binding stream_wrap&apos;,</span><br><span class="line">        &apos;Binding tcp_wrap&apos;,</span><br><span class="line">        &apos;Binding pipe_wrap&apos;,</span><br><span class="line">        &apos;NativeModule internal/stream_base_commons&apos; ],</span><br><span class="line">     binding: [Function: binding],</span><br><span class="line">     _linkedBinding: [Function: _linkedBinding],</span><br><span class="line">     _events:</span><br><span class="line">      &#123; newListener: [Function],</span><br><span class="line">        removeListener: [Function],</span><br><span class="line">        warning: [Function] &#125;,</span><br><span class="line">     _eventsCount: 3,</span><br><span class="line">     _maxListeners: undefined,</span><br><span class="line">     _fatalException: [Function],</span><br><span class="line">     domain: null,</span><br><span class="line">     _exiting: false,</span><br><span class="line">     assert: [Function: deprecated],</span><br><span class="line">     config: &#123; target_defaults: [Object], variables: [Object] &#125;,</span><br><span class="line">     setUncaughtExceptionCaptureCallback: [Function],</span><br><span class="line">     hasUncaughtExceptionCaptureCallback: [Function],</span><br><span class="line">     emitWarning: [Function],</span><br><span class="line">     nextTick: [Function: nextTick],</span><br><span class="line">     _tickCallback: [Function: _tickCallback],</span><br><span class="line">     stdout: [Getter],</span><br><span class="line">     stderr: [Getter],</span><br><span class="line">     stdin: [Getter],</span><br><span class="line">     openStdin: [Function],</span><br><span class="line">     exit: [Function],</span><br><span class="line">     kill: [Function],</span><br><span class="line">     argv0: &apos;/usr/local/bin/node&apos;,</span><br><span class="line">     mainModule:</span><br><span class="line">      Module &#123;</span><br><span class="line">        id: &apos;.&apos;,</span><br><span class="line">        exports: &#123;&#125;,</span><br><span class="line">        parent: null,</span><br><span class="line">        filename:</span><br><span class="line">         &apos;/Users/00arunalldata00/009_mystudy/010_everest/001_Everest4/20180628/201804/7.fs/11.fn.js&apos;,</span><br><span class="line">        loaded: false,</span><br><span class="line">        children: [],</span><br><span class="line">        paths: [Array] &#125; &#125;,</span><br><span class="line">  Buffer:</span><br><span class="line">   &#123; [Function: Buffer]</span><br><span class="line">     poolSize: 8192,</span><br><span class="line">     from: [Function: from],</span><br><span class="line">     of: [Function: of],</span><br><span class="line">     alloc: [Function: alloc],</span><br><span class="line">     allocUnsafe: [Function: allocUnsafe],</span><br><span class="line">     allocUnsafeSlow: [Function: allocUnsafeSlow],</span><br><span class="line">     isBuffer: [Function: isBuffer],</span><br><span class="line">     compare: [Function: compare],</span><br><span class="line">     isEncoding: [Function: isEncoding],</span><br><span class="line">     concat: [Function: concat],</span><br><span class="line">     byteLength: [Function: byteLength],</span><br><span class="line">     [Symbol(kIsEncodingSymbol)]: [Function: isEncoding] &#125;,</span><br><span class="line">  clearImmediate: [Function: clearImmediate],</span><br><span class="line">  clearInterval: [Function: clearInterval],</span><br><span class="line">  clearTimeout: [Function: clearTimeout],</span><br><span class="line">  setImmediate:</span><br><span class="line">   &#123; [Function: setImmediate] [Symbol(util.promisify.custom)]: [Function] &#125;,</span><br><span class="line">  setInterval: [Function: setInterval],</span><br><span class="line">  setTimeout:</span><br><span class="line">   &#123; [Function: setTimeout] [Symbol(util.promisify.custom)]: [Function] &#125; &#125;</span><br><span class="line">Object [global] &#123;</span><br><span class="line">  DTRACE_NET_SERVER_CONNECTION: [Function],</span><br><span class="line">  DTRACE_NET_STREAM_END: [Function],</span><br><span class="line">  DTRACE_HTTP_SERVER_REQUEST: [Function],</span><br><span class="line">  DTRACE_HTTP_SERVER_RESPONSE: [Function],</span><br><span class="line">  DTRACE_HTTP_CLIENT_REQUEST: [Function],</span><br><span class="line">  DTRACE_HTTP_CLIENT_RESPONSE: [Function],</span><br><span class="line">  global: [Circular],</span><br><span class="line">  process:</span><br><span class="line">   process &#123;</span><br><span class="line">     title: &apos;/usr/local/bin/node&apos;,</span><br><span class="line">     version: &apos;v10.3.0&apos;,</span><br><span class="line">     versions:</span><br><span class="line">      &#123; http_parser: &apos;2.8.0&apos;,</span><br><span class="line">        node: &apos;10.3.0&apos;,</span><br><span class="line">        v8: &apos;6.6.346.32-node.9&apos;,</span><br><span class="line">        uv: &apos;1.20.3&apos;,</span><br><span class="line">        zlib: &apos;1.2.11&apos;,</span><br><span class="line">        ares: &apos;1.14.0&apos;,</span><br><span class="line">        modules: &apos;64&apos;,</span><br><span class="line">        nghttp2: &apos;1.29.0&apos;,</span><br><span class="line">        napi: &apos;3&apos;,</span><br><span class="line">        openssl: &apos;1.1.0h&apos;,</span><br><span class="line">        icu: &apos;61.1&apos;,</span><br><span class="line">        unicode: &apos;10.0&apos;,</span><br><span class="line">        cldr: &apos;33.0&apos;,</span><br><span class="line">        tz: &apos;2018c&apos; &#125;,</span><br><span class="line">     arch: &apos;x64&apos;,</span><br><span class="line">     platform: &apos;darwin&apos;,</span><br><span class="line">     release:</span><br><span class="line">      &#123; name: &apos;node&apos;,</span><br><span class="line">        sourceUrl:</span><br><span class="line">         &apos;https://nodejs.org/download/release/v10.3.0/node-v10.3.0.tar.gz&apos;,</span><br><span class="line">        headersUrl:</span><br><span class="line">         &apos;https://nodejs.org/download/release/v10.3.0/node-v10.3.0-headers.tar.gz&apos; &#125;,</span><br><span class="line">     argv:</span><br><span class="line">      [ &apos;/usr/local/Cellar/node/10.3.0/bin/node&apos;,</span><br><span class="line">        &apos;/Users/00arunalldata00/009_mystudy/010_everest/001_Everest4/20180628/201804/7.fs/11.fn.js&apos; ],</span><br><span class="line">     execArgv: [],</span><br><span class="line">     env:</span><br><span class="line">      &#123; PATH:</span><br><span class="line">         &apos;/usr/local/opt/openssl/bin:/opt/vagrant/bin:/usr/local/sbin:/usr/local/opt/sqlite/bin:/usr/local/opt/openresty-openssl/bin:/usr/local/opt/icu4c/sbin:/usr/local/mysql/bin:/usr/local/opt/icu4c/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Applications/Wireshark.app/Contents/MacOS&apos;,</span><br><span class="line">        NVM_RC_VERSION: &apos;&apos;,</span><br><span class="line">        FORCE_COLOR: &apos;true&apos;,</span><br><span class="line">        ELECTRON_NO_ATTACH_CONSOLE: &apos;true&apos;,</span><br><span class="line">        DEBUG_COLORS: &apos;true&apos;,</span><br><span class="line">        npm_config_color: &apos;always&apos;,</span><br><span class="line">        MOCHA_COLORS: &apos;1&apos;,</span><br><span class="line">        VERSIONER_PYTHON_VERSION: &apos;2.7&apos;,</span><br><span class="line">        LOGNAME: &apos;arunyang&apos;,</span><br><span class="line">        NVM_NODEJS_ORG_MIRROR: &apos;https://nodejs.org/dist&apos;,</span><br><span class="line">        XPC_SERVICE_NAME: &apos;com.jetbrains.WebStorm.77156&apos;,</span><br><span class="line">        PWD:</span><br><span class="line">         &apos;/Users/00arunalldata00/009_mystudy/010_everest/001_Everest4/20180628/201804/7.fs&apos;,</span><br><span class="line">        NVM_CD_FLAGS: &apos;-q&apos;,</span><br><span class="line">        NVM_DIR: &apos;/Users/arunyang/.nvm&apos;,</span><br><span class="line">        SHELL: &apos;/bin/zsh&apos;,</span><br><span class="line">        PAGER: &apos;less&apos;,</span><br><span class="line">        LSCOLORS: &apos;Gxfxcxdxbxegedabagacad&apos;,</span><br><span class="line">        SECURITYSESSIONID: &apos;186a8&apos;,</span><br><span class="line">        OLDPWD: &apos;/Applications/WebStorm.app/Contents/bin&apos;,</span><br><span class="line">        VERSIONER_PYTHON_PREFER_32_BIT: &apos;no&apos;,</span><br><span class="line">        USER: &apos;arunyang&apos;,</span><br><span class="line">        ZSH: &apos;/Users/arunyang/.oh-my-zsh&apos;,</span><br><span class="line">        TMPDIR: &apos;/var/folders/wy/v0w9vkf52836x21w_jz2wzlh0000gn/T/&apos;,</span><br><span class="line">        SSH_AUTH_SOCK: &apos;/private/tmp/com.apple.launchd.eIAcy2rAQL/Listeners&apos;,</span><br><span class="line">        XPC_FLAGS: &apos;0x0&apos;,</span><br><span class="line">        NVM_IOJS_ORG_MIRROR: &apos;https://iojs.org/dist&apos;,</span><br><span class="line">        __CF_USER_TEXT_ENCODING: &apos;0x1F5:0x0:0x0&apos;,</span><br><span class="line">        Apple_PubSub_Socket_Render: &apos;/private/tmp/com.apple.launchd.hbi4VHrgDC/Render&apos;,</span><br><span class="line">        LESS: &apos;-R&apos;,</span><br><span class="line">        LC_CTYPE: &apos;&apos;,</span><br><span class="line">        HOME: &apos;/Users/arunyang&apos; &#125;,</span><br><span class="line">     pid: 3736,</span><br><span class="line">     features:</span><br><span class="line">      &#123; debug: false,</span><br><span class="line">        uv: true,</span><br><span class="line">        ipv6: true,</span><br><span class="line">        tls_alpn: true,</span><br><span class="line">        tls_sni: true,</span><br><span class="line">        tls_ocsp: true,</span><br><span class="line">        tls: true &#125;,</span><br><span class="line">     ppid: 3118,</span><br><span class="line">     execPath: &apos;/usr/local/Cellar/node/10.3.0/bin/node&apos;,</span><br><span class="line">     debugPort: 9229,</span><br><span class="line">     _startProfilerIdleNotifier: [Function: _startProfilerIdleNotifier],</span><br><span class="line">     _stopProfilerIdleNotifier: [Function: _stopProfilerIdleNotifier],</span><br><span class="line">     _getActiveRequests: [Function: _getActiveRequests],</span><br><span class="line">     _getActiveHandles: [Function: _getActiveHandles],</span><br><span class="line">     reallyExit: [Function: reallyExit],</span><br><span class="line">     abort: [Function: abort],</span><br><span class="line">     chdir: [Function: chdir],</span><br><span class="line">     cwd: [Function: cwd],</span><br><span class="line">     umask: [Function: umask],</span><br><span class="line">     getuid: [Function: getuid],</span><br><span class="line">     geteuid: [Function: geteuid],</span><br><span class="line">     setuid: [Function: setuid],</span><br><span class="line">     seteuid: [Function: seteuid],</span><br><span class="line">     setgid: [Function: setgid],</span><br><span class="line">     setegid: [Function: setegid],</span><br><span class="line">     getgid: [Function: getgid],</span><br><span class="line">     getegid: [Function: getegid],</span><br><span class="line">     getgroups: [Function: getgroups],</span><br><span class="line">     setgroups: [Function: setgroups],</span><br><span class="line">     initgroups: [Function: initgroups],</span><br><span class="line">     _kill: [Function: _kill],</span><br><span class="line">     _debugProcess: [Function: _debugProcess],</span><br><span class="line">     _debugEnd: [Function: _debugEnd],</span><br><span class="line">     hrtime: [Function: hrtime],</span><br><span class="line">     cpuUsage: [Function: cpuUsage],</span><br><span class="line">     dlopen: [Function: dlopen],</span><br><span class="line">     uptime: [Function: uptime],</span><br><span class="line">     memoryUsage: [Function: memoryUsage],</span><br><span class="line">     _rawDebug: [Function],</span><br><span class="line">     moduleLoadList:</span><br><span class="line">      [ &apos;Binding contextify&apos;,</span><br><span class="line">        &apos;NativeModule events&apos;,</span><br><span class="line">        &apos;NativeModule internal/async_hooks&apos;,</span><br><span class="line">        &apos;NativeModule internal/errors&apos;,</span><br><span class="line">        &apos;Binding uv&apos;,</span><br><span class="line">        &apos;Binding buffer&apos;,</span><br><span class="line">        &apos;Binding async_wrap&apos;,</span><br><span class="line">        &apos;Binding config&apos;,</span><br><span class="line">        &apos;Binding icu&apos;,</span><br><span class="line">        &apos;NativeModule util&apos;,</span><br><span class="line">        &apos;NativeModule internal/encoding&apos;,</span><br><span class="line">        &apos;NativeModule internal/util&apos;,</span><br><span class="line">        &apos;Binding constants&apos;,</span><br><span class="line">        &apos;Binding util&apos;,</span><br><span class="line">        &apos;NativeModule internal/util/types&apos;,</span><br><span class="line">        &apos;Internal Binding types&apos;,</span><br><span class="line">        &apos;NativeModule buffer&apos;,</span><br><span class="line">        &apos;NativeModule internal/buffer&apos;,</span><br><span class="line">        &apos;NativeModule internal/process&apos;,</span><br><span class="line">        &apos;NativeModule assert&apos;,</span><br><span class="line">        &apos;NativeModule internal/assert&apos;,</span><br><span class="line">        &apos;NativeModule fs&apos;,</span><br><span class="line">        &apos;NativeModule path&apos;,</span><br><span class="line">        &apos;NativeModule internal/constants&apos;,</span><br><span class="line">        &apos;Binding fs&apos;,</span><br><span class="line">        &apos;NativeModule stream&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/pipeline&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/end-of-stream&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/legacy&apos;,</span><br><span class="line">        &apos;NativeModule _stream_readable&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/buffer_list&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/destroy&apos;,</span><br><span class="line">        &apos;NativeModule internal/streams/state&apos;,</span><br><span class="line">        &apos;NativeModule _stream_writable&apos;,</span><br><span class="line">        &apos;NativeModule _stream_duplex&apos;,</span><br><span class="line">        &apos;NativeModule _stream_transform&apos;,</span><br><span class="line">        &apos;NativeModule _stream_passthrough&apos;,</span><br><span class="line">        &apos;Binding fs_event_wrap&apos;,</span><br><span class="line">        &apos;NativeModule internal/fs/utils&apos;,</span><br><span class="line">        &apos;NativeModule internal/url&apos;,</span><br><span class="line">        &apos;NativeModule internal/querystring&apos;,</span><br><span class="line">        &apos;Binding url&apos;,</span><br><span class="line">        &apos;NativeModule internal/process/warning&apos;,</span><br><span class="line">        &apos;NativeModule internal/process/next_tick&apos;,</span><br><span class="line">        &apos;NativeModule internal/process/promises&apos;,</span><br><span class="line">        &apos;NativeModule internal/fixed_queue&apos;,</span><br><span class="line">        &apos;NativeModule internal/process/stdio&apos;,</span><br><span class="line">        &apos;Binding performance&apos;,</span><br><span class="line">        &apos;Binding trace_events&apos;,</span><br><span class="line">        &apos;NativeModule internal/inspector_async_hook&apos;,</span><br><span class="line">        &apos;Binding inspector&apos;,</span><br><span class="line">        &apos;NativeModule timers&apos;,</span><br><span class="line">        &apos;Binding timer_wrap&apos;,</span><br><span class="line">        &apos;NativeModule internal/linkedlist&apos;,</span><br><span class="line">        &apos;NativeModule internal/timers&apos;,</span><br><span class="line">        &apos;NativeModule internal/modules/cjs/loader&apos;,</span><br><span class="line">        &apos;NativeModule vm&apos;,</span><br><span class="line">        &apos;NativeModule internal/modules/cjs/helpers&apos;,</span><br><span class="line">        &apos;NativeModule console&apos;,</span><br><span class="line">        &apos;Binding tty_wrap&apos;,</span><br><span class="line">        &apos;NativeModule net&apos;,</span><br><span class="line">        &apos;NativeModule internal/net&apos;,</span><br><span class="line">        &apos;Binding cares_wrap&apos;,</span><br><span class="line">        &apos;Binding stream_wrap&apos;,</span><br><span class="line">        &apos;Binding tcp_wrap&apos;,</span><br><span class="line">        &apos;Binding pipe_wrap&apos;,</span><br><span class="line">        &apos;NativeModule internal/stream_base_commons&apos; ],</span><br><span class="line">     binding: [Function: binding],</span><br><span class="line">     _linkedBinding: [Function: _linkedBinding],</span><br><span class="line">     _events:</span><br><span class="line">      &#123; newListener: [Function],</span><br><span class="line">        removeListener: [Function],</span><br><span class="line">        warning: [Function] &#125;,</span><br><span class="line">     _eventsCount: 3,</span><br><span class="line">     _maxListeners: undefined,</span><br><span class="line">     _fatalException: [Function],</span><br><span class="line">     domain: null,</span><br><span class="line">     _exiting: false,</span><br><span class="line">     assert: [Function: deprecated],</span><br><span class="line">     config: &#123; target_defaults: [Object], variables: [Object] &#125;,</span><br><span class="line">     setUncaughtExceptionCaptureCallback: [Function],</span><br><span class="line">     hasUncaughtExceptionCaptureCallback: [Function],</span><br><span class="line">     emitWarning: [Function],</span><br><span class="line">     nextTick: [Function: nextTick],</span><br><span class="line">     _tickCallback: [Function: _tickCallback],</span><br><span class="line">     stdout: [Getter],</span><br><span class="line">     stderr: [Getter],</span><br><span class="line">     stdin: [Getter],</span><br><span class="line">     openStdin: [Function],</span><br><span class="line">     exit: [Function],</span><br><span class="line">     kill: [Function],</span><br><span class="line">     argv0: &apos;/usr/local/bin/node&apos;,</span><br><span class="line">     mainModule:</span><br><span class="line">      Module &#123;</span><br><span class="line">        id: &apos;.&apos;,</span><br><span class="line">        exports: &#123;&#125;,</span><br><span class="line">        parent: null,</span><br><span class="line">        filename:</span><br><span class="line">         &apos;/Users/00arunalldata00/009_mystudy/010_everest/001_Everest4/20180628/201804/7.fs/11.fn.js&apos;,</span><br><span class="line">        loaded: false,</span><br><span class="line">        children: [],</span><br><span class="line">        paths: [Array] &#125; &#125;,</span><br><span class="line">  Buffer:</span><br><span class="line">   &#123; [Function: Buffer]</span><br><span class="line">     poolSize: 8192,</span><br><span class="line">     from: [Function: from],</span><br><span class="line">     of: [Function: of],</span><br><span class="line">     alloc: [Function: alloc],</span><br><span class="line">     allocUnsafe: [Function: allocUnsafe],</span><br><span class="line">     allocUnsafeSlow: [Function: allocUnsafeSlow],</span><br><span class="line">     isBuffer: [Function: isBuffer],</span><br><span class="line">     compare: [Function: compare],</span><br><span class="line">     isEncoding: [Function: isEncoding],</span><br><span class="line">     concat: [Function: concat],</span><br><span class="line">     byteLength: [Function: byteLength],</span><br><span class="line">     [Symbol(kIsEncodingSymbol)]: [Function: isEncoding] &#125;,</span><br><span class="line">  clearImmediate: [Function: clearImmediate],</span><br><span class="line">  clearInterval: [Function: clearInterval],</span><br><span class="line">  clearTimeout: [Function: clearTimeout],</span><br><span class="line">  setImmediate:</span><br><span class="line">   &#123; [Function: setImmediate] [Symbol(util.promisify.custom)]: [Function] &#125;,</span><br><span class="line">  setInterval: [Function: setInterval],</span><br><span class="line">  setTimeout:</span><br><span class="line">   &#123; [Function: setTimeout] [Symbol(util.promisify.custom)]: [Function] &#125; &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#fs模块&lt;/p&gt;
&lt;p&gt;##1.1&lt;/p&gt;
&lt;p&gt;###1.1.1 readFile函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://nodejs.cn/api/fs.html#fs_fs_readfile_path_options_callb
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.arunyang.com/2018/06/28/004%E8%AF%BE%E4%BB%B61_3node%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.arunyang.com/2018/06/28/004课件1_3node基础/</id>
    <published>2018-06-28T00:57:56.000Z</published>
    <updated>2018-06-30T00:33:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]<br>#</p><h2 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h2><h3 id="1-1-1多线程"><a href="#1-1-1多线程" class="headerlink" title="1.1.1多线程"></a>1.1.1多线程</h3><blockquote><p>多线程 单线程</p><ul><li>主线程是单线程的 (node其实也是多线程的 setTimeout线程 ajax)<br>浏览器 (线程 进程)</li><li>js线程</li><li>ui线程<br>一般情况下 ui线程 渲染后 空闲下来 会执行js<br><code>js线程和ui线程 是共享线程的( webworker 进程) 开一个工作者(归主线程来管理的，不能操作dom)</code><br><code>如果js是多线程的,不能同时两个线程 操作同一个DOM</code><br>异步 同步<br>阻塞和非阻塞<br>NODE<br><code>非阻塞异步io + 事件驱动</code><br>queue stack</li><li>queue队列 先进先出 push shift </li><li>stack栈  函数执行</li></ul></blockquote><blockquote><p>ive-server / http-server/ zf-http-server</p><ul><li>全局安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install http-server -g</span><br><span class="line">http-server</span><br></pre></td></tr></table></figure></li></ul></blockquote><h4 id="1-1-1-1-宏任务MutationObserve更新示例"><a href="#1-1-1-1-宏任务MutationObserve更新示例" class="headerlink" title="1.1.1.1 宏任务MutationObserve更新示例"></a>1.1.1.1 宏任务MutationObserve更新示例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">  </span></span><br><span class="line"><span class="javascript">      <span class="comment">// 废弃了 兼容有问题</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> observe = <span class="keyword">new</span> MutationObserver(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      alert(<span class="string">'已经dom更新好了'</span>)</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="javascript">      observe.observe(app,&#123;<span class="attr">childList</span>:<span class="literal">true</span>&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript">        app.appendChild(<span class="built_in">document</span>.createElement(<span class="string">'span'</span>));</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果如下</strong><br><img src="/2018/06/28/004课件1_3node基础/Users/00arunalldata00/009_mystudy/012_mygithub_blog/itcomputer12.github.io/arunyang/source/_posts/20180623/002.png" alt="图002"><br><img src="/2018/06/28/004课件1_3node基础/Users/00arunalldata00/009_mystudy/012_mygithub_blog/itcomputer12.github.io/arunyang/source/_posts/20180623/003.png" alt="图003"></p><h4 id="1-1-1-2-h5内置函数同异步代码演示"><a href="#1-1-1-2-h5内置函数同异步代码演示" class="headerlink" title="1.1.1.2 h5内置函数同异步代码演示"></a>1.1.1.2 h5内置函数同异步代码演示</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">// 宏任务 MutationObserve</span></span><br><span class="line">    <span class="keyword">let</span> messageChannel = <span class="keyword">new</span> MessageChannel(); <span class="comment">//h5内置</span></span><br><span class="line">    <span class="keyword">let</span> prot2 = messageChannel.port2;</span><br><span class="line">    <span class="comment">// postMessage是异步执行的 要等待同步都执行完后 才会被调用</span></span><br><span class="line">    messageChannel.port1.postMessage(<span class="string">'我爱你'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    prot2.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(e.data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p><strong>浏览器Console输出</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">我爱你</span><br></pre></td></tr></table></figure></p><h4 id="1-1-2-1-多线程工作原理代码详解"><a href="#1-1-2-1-多线程工作原理代码详解" class="headerlink" title="1.1.2.1 多线程工作原理代码详解"></a>1.1.2.1 多线程工作原理代码详解</h4><blockquote><p>cat 1.webworker.html<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">// 多线程 可以开一个工作线程</span></span><br><span class="line">    <span class="comment">// 但是要归主线程所管理</span></span><br><span class="line">    <span class="comment">// websocket</span></span><br><span class="line">    <span class="keyword">let</span> worker  = <span class="keyword">new</span> Worker(<span class="string">'./1.worker.js'</span>);</span><br><span class="line">    worker.postMessage(<span class="number">10000</span>);</span><br><span class="line">    worker.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(e.data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'main thread'</span>)</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><p><strong>浏览器Console输出</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">main thread</span><br><span class="line">49995000</span><br></pre></td></tr></table></figure></p><blockquote><p>cat 1.worker.js 写完后通过消息发送给另一个线程<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> r = e.data;</span><br><span class="line">  <span class="keyword">let</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;r;i++)&#123;</span><br><span class="line">    sum+=i;</span><br><span class="line">  &#125;</span><br><span class="line">  postMessage(sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="1-1-2-2-主线程栈调用顺序"><a href="#1-1-2-2-主线程栈调用顺序" class="headerlink" title="1.1.2.2 主线程栈调用顺序"></a>1.1.2.2 主线程栈调用顺序</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">one</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">two</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">three</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    three();</span><br><span class="line">  &#125;</span><br><span class="line">  two();</span><br><span class="line">&#125;</span><br><span class="line">one();<span class="comment">/*输出=&gt;</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>![001图]/Users/00arunalldata00/009_mystudy/012_mygithub_blog/itcomputer12.github.io/arunyang/source/_posts/20180623/001.jpg)</p><h4 id="1-1-2-2-放入回调队列顺序的代码演示"><a href="#1-1-2-2-放入回调队列顺序的代码演示" class="headerlink" title="1.1.2.2 放入回调队列顺序的代码演示"></a>1.1.2.2 放入回调队列顺序的代码演示</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同步代码执行后 才会执行异步</span></span><br><span class="line"><span class="comment">// 根据时间排序 当时间到达后 把对应的回调 放到队列里</span></span><br><span class="line"><span class="comment">// 宏任务 微任务(vue $nextTick) 异步方法</span></span><br><span class="line"><span class="comment">// setImmedate只兼容ie </span></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">4</span>);</span><br><span class="line">  &#125;, <span class="number">1000</span>);  <span class="comment">//这个比2后放入callback queue的</span></span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br><span class="line"><span class="comment">/*输出=&gt;</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h4 id="1-1-2-3-微任务和宏任务执行顺序"><a href="#1-1-2-3-微任务和宏任务执行顺序" class="headerlink" title="1.1.2.3 微任务和宏任务执行顺序"></a>1.1.2.3 微任务和宏任务执行顺序</h4><blockquote><p>Promise中的then方法是微任务 会在宏任务之前执行<br>cat Promise.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// Promise中的then方法是微任务 会在宏任务之前执行</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>( <span class="function">(<span class="params">resolve,reject</span>)=&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="number">2</span>);</span></span><br><span class="line"><span class="undefined">      resolve();</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="javascript">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;   <span class="comment">//宏任务</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'timeout'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;, 0);</span></span><br><span class="line"><span class="javascript">    p.then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;<span class="comment">//微任务</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="number">3</span>);</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="number">4</span>);</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><p><strong>浏览器Console输出</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">timeout</span><br></pre></td></tr></table></figure></p><blockquote><p>setImmediate也是宏任务<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">   <span class="comment">// 默认是低于timeout 宏任务</span></span></span><br><span class="line"><span class="javascript">    setImmediate(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//只有2B的微软有这个方法(宏任务)</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'setImmediate'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="javascript">    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'timeout'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;, 4);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">输出=&gt;</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">setImmediate</span></span><br><span class="line"><span class="comment">timeout</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="1-1-2-4-微任务和宏任务复杂场景比较执行顺序"><a href="#1-1-2-4-微任务和宏任务复杂场景比较执行顺序" class="headerlink" title="1.1.2.4 微任务和宏任务复杂场景比较执行顺序"></a>1.1.2.4 微任务和宏任务复杂场景比较执行顺序</h4><blockquote><p>cat timeout.js<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(() =&gt; &#123;</span><br><span class="line">  console.log('setTimeout1')</span><br><span class="line">  Promise.resolve().then(data =&gt; &#123;</span><br><span class="line">    console.log('微任务1')</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;, 0);</span><br><span class="line">Promise.resolve().then(data=&gt;&#123;</span><br><span class="line">  console.log('微任务2')</span><br><span class="line">  setTimeout(() =&gt; &#123;</span><br><span class="line">    console.log('setTimeout2')</span><br><span class="line">  &#125;, 0);</span><br><span class="line">&#125;);</span><br><span class="line">/*输出=&gt;输出顺序不一致</span><br><span class="line">微任务2</span><br><span class="line">setTimeout1</span><br><span class="line">微任务1 (不一定前后)</span><br><span class="line">setTimeout2 (不一定前后)</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;br&gt;#&lt;/p&gt;
&lt;h2 id=&quot;1-1&quot;&gt;&lt;a href=&quot;#1-1&quot; class=&quot;headerlink&quot; title=&quot;1.1&quot;&gt;&lt;/a&gt;1.1&lt;/h2&gt;&lt;h3 id=&quot;1-1-1多线程&quot;&gt;&lt;a href=&quot;#1-1-1多线程&quot; class=&quot;header
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.arunyang.com/2018/06/28/003%E8%AF%BE%E4%BB%B67_7.generator+async-wait/"/>
    <id>http://www.arunyang.com/2018/06/28/003课件7_7.generator+async-wait/</id>
    <published>2018-06-28T00:56:00.000Z</published>
    <updated>2018-06-28T00:56:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="generator-async-await"><a href="#generator-async-await" class="headerlink" title="generator+async await"></a>generator+async await</h1><h2 id="1-1-源码讲解"><a href="#1-1-源码讲解" class="headerlink" title="1.1 源码讲解"></a>1.1 源码讲解</h2><blockquote><p>redux-saga</p></blockquote><p>  <code>koa1.0 generator --&gt; kos async await</code></p><h3 id="1-1-1-是否可迭代比较"><a href="#1-1-1-是否可迭代比较" class="headerlink" title="1.1.1 是否可迭代比较"></a>1.1.1 是否可迭代比较</h3><blockquote></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = &#123; <span class="number">0</span>: <span class="number">1</span>, <span class="number">1</span>: <span class="number">2</span>, <span class="attr">length</span>: <span class="number">2</span>&#125; <span class="comment">//给类数组增加可迭代的函数才可以迭代</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> arr)&#123; <span class="comment">//报错=&gt; TypeError: arr is not iterable</span></span><br><span class="line"><span class="comment">// for (let item of [1,2,3])&#123;</span></span><br><span class="line">    <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125; <span class="comment">//输出=&gt; 1 2 3</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> <span class="built_in">arguments</span>)&#123; <span class="comment">//arguments不是数组</span></span><br><span class="line">        <span class="built_in">console</span>.log(item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">a(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) <span class="comment">//输出=&gt; 1 2 3</span></span><br></pre></td></tr></table></figure><h3 id="1-1-2实现迭代器"><a href="#1-1-2实现迭代器" class="headerlink" title="1.1.2实现迭代器"></a>1.1.2实现迭代器</h3><blockquote><p><strong>生成器返回的是迭代器</strong></p></blockquote><blockquote><p><code>迭代器</code>:迭代器必须返回一个对象对象里有一个next方法，每调用一次next方法就可以返回一个对象。 done表示是否迭代完成, value表示为迭代的结果。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = &#123; <span class="number">0</span>: <span class="number">1</span>, <span class="number">1</span>: <span class="number">2</span>, <span class="attr">length</span>: <span class="number">2</span> ,[<span class="built_in">Symbol</span>.iterator]:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> len = <span class="keyword">this</span>.length;</span><br><span class="line">  <span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    next()&#123;</span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">done</span>: index === len, <span class="attr">value</span>: that[index++]&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> arr)&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125; <span class="comment">//输出=&gt; 1 2</span></span><br></pre></td></tr></table></figure><h3 id="1-1-2-generator的”-”和”yeild”"><a href="#1-1-2-generator的”-”和”yeild”" class="headerlink" title="1.1.2 generator的”*”和”yeild”"></a>1.1.2 generator的”*”和”yeild”</h3><blockquote><p>generator 必须要有*  配合yeild ,碰到yield 就停止，再次调用next就继续走<br><code>当遇到return时就迭代完成了</code><br>第一个next传递参数是没有效果的<br>第二次next传递的参数 是第一次yield的返回值</p></blockquote><p>原理图解: <img src="/2018/06/28/003课件7_7.generator+async-wait/Users/00arunalldata00/009_mystudy/012_mygithub_blog/itcomputer12.github.io/arunyang/source/_posts/2018069/001.png" alt="图解"><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> * <span class="title">thing</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> a = <span class="keyword">yield</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">  <span class="keyword">let</span> b = <span class="keyword">yield</span> <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(b); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> it = thing();</span><br><span class="line"><span class="comment">// console.log(it.next());</span></span><br><span class="line"><span class="built_in">console</span>.log(it.next(<span class="string">'2000'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(it.next(<span class="string">'4000'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(it.next(<span class="string">'end000'</span>));</span><br><span class="line"><span class="comment">/*输出=&gt;</span></span><br><span class="line"><span class="comment">&#123; value: 1, done: false &#125;</span></span><br><span class="line"><span class="comment">&#123; value: '4000', done: true &#125;</span></span><br><span class="line"><span class="comment">&#123; value: undefined, done: true &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><h3 id="1-1-3-generator应用案例之promisify"><a href="#1-1-3-generator应用案例之promisify" class="headerlink" title="1.1.3 generator应用案例之promisify"></a>1.1.3 generator应用案例之promisify</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat 1.txt</span><br><span class="line">2.txt</span><br><span class="line">cat 2.txt</span><br><span class="line">我很帅</span><br></pre></td></tr></table></figure><blockquote><p>实现<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> blueBird =<span class="built_in">require</span>(<span class="string">'bluebird'</span>);</span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">let</span> read = blueBird.promisify(fs.readFile);</span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">readMethod</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data1 = <span class="keyword">yield</span> read(<span class="string">'./1.txt'</span>,<span class="string">'utf8'</span>);</span><br><span class="line">  <span class="keyword">let</span> data2 = <span class="keyword">yield</span> read(data1,<span class="string">'utf8'</span>);</span><br><span class="line">  <span class="keyword">return</span> data2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> it = readMethod();</span><br><span class="line">it.next().value.then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">  it.next(data).value.then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; done, value &#125; = it.next(data);</span><br><span class="line">    <span class="built_in">console</span>.log(done,value);  <span class="comment">//输出=&gt; true '我很帅'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="1-1-3-async-await等价的“generator-co库”的实现"><a href="#1-1-3-async-await等价的“generator-co库”的实现" class="headerlink" title="1.1.3 async+await等价的“generator+co库”的实现"></a>1.1.3 async+await等价的“generator+co库”的实现</h4><p><code>async+await &lt;==&gt; generator+co库</code></p><blockquote><p>改进以及开源co库的实现<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> blueBird =<span class="built_in">require</span>(<span class="string">'bluebird'</span>);</span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">let</span> read = blueBird.promisify(fs.readFile);</span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">readMethod</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data1 = <span class="keyword">yield</span> read(<span class="string">'./1.txt'</span>,<span class="string">'utf8'</span>);</span><br><span class="line">  <span class="keyword">let</span> data2 = <span class="keyword">yield</span> read(data1,<span class="string">'utf8'</span>);</span><br><span class="line">  <span class="keyword">return</span> data2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*let it = readMethod();</span></span><br><span class="line"><span class="comment">it.next().value.then(data =&gt; &#123;</span></span><br><span class="line"><span class="comment">  it.next(data).value.then(data =&gt; &#123;</span></span><br><span class="line"><span class="comment">    let &#123; done, value &#125; = it.next(data);</span></span><br><span class="line"><span class="comment">    console.log(done,value);</span></span><br><span class="line"><span class="comment">  &#125;)</span></span><br><span class="line"><span class="comment">&#125;)*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">co</span>(<span class="params">it</span>) </span>&#123;   <span class="comment">//开源co库的实现</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 异步调用的问题</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">let</span> &#123; value, done &#125; = it.next(data);</span><br><span class="line">      <span class="keyword">if</span>(!done)&#123;</span><br><span class="line">        value.then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">          next(data)</span><br><span class="line">        &#125;, reject)</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        resolve(value);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    next();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// let co = require('co'); //generator async =&gt; async flow generator coro coroutine</span></span><br><span class="line"><span class="comment">//git地址:https://github.com/tj/co   tj为express作者</span></span><br><span class="line"><span class="comment">// 获取1.txt内容 2.txt 2.txt放的内容是最终的结果</span></span><br><span class="line">co(readMethod()).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);  <span class="comment">//输出=&gt; 我很帅</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="1-1-4-async-await使用"><a href="#1-1-4-async-await使用" class="headerlink" title="1.1.4 async+await使用"></a>1.1.4 async+await使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这就是一个语法糖</span></span><br><span class="line"><span class="keyword">let</span> blueBird =<span class="built_in">require</span>(<span class="string">'bluebird'</span>);</span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">let</span> read = blueBird.promisify(fs.readFile);</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">readMethod</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data1 = <span class="keyword">await</span> read(<span class="string">'./1.txt'</span>,<span class="string">'utf8'</span>);</span><br><span class="line">  <span class="keyword">let</span> data2 = <span class="keyword">await</span> read(data1,<span class="string">'utf8'</span>);</span><br><span class="line">  <span class="keyword">return</span> data2;</span><br><span class="line">&#125;</span><br><span class="line">readMethod().then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);  <span class="comment">//输出=&gt; 我很帅</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>通过babeljs.io转译后async和await的源码实现,function _asyncToGenerator(fn)函数部分(同function co(it))<br><code>http://babeljs.io/repl#?babili=false&amp;browsers=&amp;build=&amp;builtIns=false&amp;spec=false&amp;loose=false&amp;code_lz=IYZwngdgxgBAZgV2gFwJYHsIwE4FNgAmAsrsgBboEAUAlDAN4BQMMANqTAcMsAIwwBeGMADuwVMhz5qAcgB0Ael5zkAD2QyANDITI4ADhk0A3MzYcuPAEyDhYiVMJVLfbboNHTLPMgTYsLlamAL5AA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;sourceType=module&amp;lineWrap=true&amp;presets=es2015%2Creact%2Cstage-2&amp;prettier=false&amp;targets=&amp;version=6.26.0&amp;envVersion=</code></p></blockquote><h2 id="1-2-实际应用"><a href="#1-2-实际应用" class="headerlink" title="1.2 实际应用"></a>1.2 实际应用</h2><blockquote><p>一共四种实现方式</p></blockquote><h3 id="1-2-1-callback方式"><a href="#1-2-1-callback方式" class="headerlink" title="1.2.1 callback方式"></a>1.2.1 callback方式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    * &#123;  /* *表示匹配所有 */</span></span><br><span class="line"><span class="undefined">      margin: 0;</span></span><br><span class="line"><span class="undefined">      padding: 0</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    div div &#123;</span></span><br><span class="line"><span class="undefined">      width: 100px;</span></span><br><span class="line"><span class="undefined">      height: 100px;</span></span><br><span class="line"><span class="undefined">      border-radius: 50%;</span></span><br><span class="line"><span class="undefined">      background: red</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ball1 &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 0;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ball2 &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 110px;   /* 中间差10px*/</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position: relative"</span>&gt;</span>   <span class="comment">&lt;!--这里表示是在同一个轴上--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> $ = <span class="built_in">document</span>.querySelector.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> ball1 = <span class="built_in">document</span>.getElementById(<span class="string">'ball1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> ball2 = <span class="built_in">document</span>.getElementById(<span class="string">'ball2'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> $);</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">el, target, cb</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> index = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> timer;</span></span><br><span class="line"><span class="javascript">          timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (index &gt;= target) &#123;</span></span><br><span class="line"><span class="undefined">              clearInterval(timer);</span></span><br><span class="line"><span class="javascript">              <span class="keyword">return</span> cb();</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">              el.style.left = ++index + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">          &#125;, 3);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">/*        move($('#ball1'), 500, function () &#123;</span></span><br><span class="line"><span class="javascript">            move($(<span class="string">'#ball2'</span>), <span class="number">500</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">'移动完成'</span>)</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;)*/</span></span><br><span class="line"><span class="javascript">        move(ball1, <span class="number">300</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            move(ball2, <span class="number">300</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">'移动完成'</span>)</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">        /*move($('#ball1'), 500, function () &#123;   //第一种方式：回调</span></span><br><span class="line"><span class="javascript">          move($(<span class="string">'#ball2'</span>), <span class="number">500</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'移动完成'</span>)</span></span><br><span class="line"><span class="undefined">          &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;)*/</span></span><br><span class="line"><span class="undefined">      </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2-2-Promise方式"><a href="#1-2-2-Promise方式" class="headerlink" title="1.2.2 Promise方式"></a>1.2.2 Promise方式</h3><blockquote><p>Promise的链式写法<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    * &#123;</span></span><br><span class="line"><span class="undefined">      margin: 0;</span></span><br><span class="line"><span class="undefined">      padding: 0</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div div &#123;</span></span><br><span class="line"><span class="undefined">      width: 100px;</span></span><br><span class="line"><span class="undefined">      height: 100px;</span></span><br><span class="line"><span class="undefined">      border-radius: 50%;</span></span><br><span class="line"><span class="undefined">      background: red</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ball1 &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 0;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ball2 &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 110px;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position: relative"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $ = <span class="built_in">document</span>.querySelector.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">el, target, cb</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> index = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> timer;</span></span><br><span class="line"><span class="javascript">        timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (index &gt;= target) &#123;</span></span><br><span class="line"><span class="undefined">            clearInterval(timer)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> resolve();</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            el.style.left = ++index + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;, 3);</span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    move($(<span class="string">'#ball1'</span>), <span class="number">500</span>).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">return</span> move($(<span class="string">'#ball2'</span>), <span class="number">500</span>)</span></span><br><span class="line"><span class="javascript">    &#125;).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;   <span class="comment">/*链式写法,根据上边的返回值*/</span></span></span><br><span class="line"><span class="javascript">      alert(<span class="string">'ok'</span>);</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="1-2-3-generator-co库方式"><a href="#1-2-3-generator-co库方式" class="headerlink" title="1.2.3 generator+co库方式"></a>1.2.3 generator+co库方式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    * &#123;</span></span><br><span class="line"><span class="undefined">      margin: 0;</span></span><br><span class="line"><span class="undefined">      padding: 0</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div div &#123;</span></span><br><span class="line"><span class="undefined">      width: 100px;</span></span><br><span class="line"><span class="undefined">      height: 100px;</span></span><br><span class="line"><span class="undefined">      border-radius: 50%;</span></span><br><span class="line"><span class="undefined">      background: red</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ball1 &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 0;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ball2 &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 110px;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position: relative"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $ = <span class="built_in">document</span>.querySelector.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">el, target, cb</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> index = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> timer;</span></span><br><span class="line"><span class="javascript">        timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (index &gt;= target) &#123;</span></span><br><span class="line"><span class="undefined">            clearInterval(timer)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> resolve();</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            el.style.left = ++index + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125;, <span class="number">3</span>); <span class="comment">//3s超时</span></span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> *<span class="title">m</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">yield</span> move($(<span class="string">'#ball1'</span>),<span class="number">500</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">yield</span> move($(<span class="string">'#ball2'</span>),<span class="number">500</span>);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">co</span>(<span class="params">it</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> &#123;value ,done&#125; = it.next(data);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(done)</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span>(!done)&#123;</span></span><br><span class="line"><span class="javascript">            value.then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="undefined">              next(data);</span></span><br><span class="line"><span class="undefined">            &#125;,reject);</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">            resolve(data);</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        next();</span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    co(m()).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">      alert(<span class="string">'成功'</span>);</span></span><br><span class="line"><span class="undefined">    &#125;,err=&gt;&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(err);</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2-3-async-await方式"><a href="#1-2-3-async-await方式" class="headerlink" title="1.2.3 async+await方式"></a>1.2.3 async+await方式</h3><blockquote><p>async和await可以支持 try catch<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    * &#123;</span></span><br><span class="line"><span class="undefined">      margin: 0;</span></span><br><span class="line"><span class="undefined">      padding: 0</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div div &#123;</span></span><br><span class="line"><span class="undefined">      width: 100px;</span></span><br><span class="line"><span class="undefined">      height: 100px;</span></span><br><span class="line"><span class="undefined">      border-radius: 50%;</span></span><br><span class="line"><span class="undefined">      background: red</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ball1 &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 0;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    #ball2 &#123;</span></span><br><span class="line"><span class="undefined">      position: absolute;</span></span><br><span class="line"><span class="undefined">      top: 110px;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position: relative"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $ = <span class="built_in">document</span>.querySelector.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">el, target, cb</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// throw new Error();</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> index = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> timer;</span></span><br><span class="line"><span class="javascript">        timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (index &gt;= target) &#123;</span></span><br><span class="line"><span class="undefined">            clearInterval(timer)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> resolve();;</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            el.style.left = ++index + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;, 3);</span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// async和await可以支持 try catch</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// try&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> move($(<span class="string">'#ball1'</span>), <span class="number">500</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> move($(<span class="string">'#ball2'</span>), <span class="number">500</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">// &#125;catch(e)&#123;</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//   console.log(e);</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    m().then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">      alert(<span class="string">'成功'</span>);</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><p><strong>所有效果如下 </strong><br><img src="/2018/06/28/003课件7_7.generator+async-wait/Users/00arunalldata00/009_mystudy/012_mygithub_blog/itcomputer12.github.io/arunyang/source/_posts/2018069/002.jpg" alt="002"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;generator-async-await&quot;&gt;&lt;a href=&quot;#generator-async-await&quot; class=&quot;headerlink&quot; title=&quot;generator+async await&quot;&gt;&lt;/a&gt;generator+
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2-1/2.高阶函数</title>
    <link href="http://www.arunyang.com/2018/06/17/001%E8%AF%BE%E4%BB%B61_1-2.%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/"/>
    <id>http://www.arunyang.com/2018/06/17/001课件1_1-2.高阶函数/</id>
    <published>2018-06-17T13:59:26.000Z</published>
    <updated>2018-06-28T01:16:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="1-1开篇"><a href="#1-1开篇" class="headerlink" title="1.1开篇"></a>1.1开篇</h2><h3 id="1-1-1-编辑器"><a href="#1-1-1-编辑器" class="headerlink" title="1.1.1 编辑器"></a>1.1.1 编辑器</h3><ul><li><p>vscode webstorm </p></li><li><p>code runner (可以片段运行代码)</p></li></ul><h3 id="1-1-2-es6"><a href="#1-1-2-es6" class="headerlink" title="1.1.2 es6"></a>1.1.2 es6</h3><h3 id="1-1-1-1-异步的发展流程"><a href="#1-1-1-1-异步的发展流程" class="headerlink" title="1.1.1.1 异步的发展流程"></a>1.1.1.1 异步的发展流程</h3><h4 id="1-1-1-1-异步和同步的区别"><a href="#1-1-1-1-异步和同步的区别" class="headerlink" title="1.1.1.1 异步和同步的区别"></a>1.1.1.1 异步和同步的区别</h4><ul><li><p>异步(setTimeout ajax 事件)和同步的区别:</p><p>同步表示连续执行，异步表示非连续执行</p></li></ul><h4 id="1-1-1-2-回调函数的两种表现形式"><a href="#1-1-1-2-回调函数的两种表现形式" class="headerlink" title="1.1.1.2 回调函数的两种表现形式"></a>1.1.1.2 回调函数的两种表现形式</h4><ul><li><p>回调函数 函数(封装，私有化),即以下两种方式:</p><p>(1)高阶函数,一个函数执行后返回一个函数(2)函数可以当作参数传递给另一个函数</p></li></ul><h2 id="2-1柯里化"><a href="#2-1柯里化" class="headerlink" title="2.1柯里化"></a>2.1柯里化</h2><h3 id="2-1-1-柯里化和偏函数的解释"><a href="#2-1-1-柯里化和偏函数的解释" class="headerlink" title="2.1.1 柯里化和偏函数的解释"></a>2.1.1 柯里化和偏函数的解释</h3><blockquote><p>即:函数返回函数 ==别的叫法==&gt; 柯里化 偏函数…</p></blockquote><h3 id="2-1-2-判断内容的类型"><a href="#2-1-2-判断内容的类型" class="headerlink" title="2.1.2 判断内容的类型"></a>2.1.2 判断内容的类型</h3><p>// 判断内容的类型</p><p>// Object.prototype.toString.call(‘aaa’) = ‘[object Null]’</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 判断类型 有四种 constructor typeof instanceof Object.prototype.toString</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isType</span>(<span class="params">content,Type</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> str = <span class="built_in">Object</span>.prototype.toString.call(content).replace(<span class="regexp">/\[object\s|\]/g</span>,<span class="string">''</span>); <span class="comment">//String</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Type === str;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result = isType(<span class="string">'hello'</span>,<span class="string">'String'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(result); <span class="comment">//输出:true</span></span><br></pre></td></tr></table></figure><blockquote><p>优化,类回调函数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function isType(type) &#123;</span><br><span class="line"></span><br><span class="line">  return function (content) &#123;</span><br><span class="line"></span><br><span class="line">    let str = Object.prototype.toString.call(content).replace(/\[object\s|\]/g, &apos;&apos;);</span><br><span class="line"></span><br><span class="line">    return type === str;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let util = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let type = [&apos;String&apos;,&apos;Object&apos;,&apos;Null&apos;,&apos;Function&apos;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">type.forEach((item)=&gt;&#123;</span><br><span class="line"></span><br><span class="line">  util[&apos;is&apos;+item] = isType(item);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">console.log(util);</span><br><span class="line"></span><br><span class="line">console.log(util.isString(&apos;hello&apos;));</span><br><span class="line"></span><br><span class="line">console.log(util.isObject(&apos;Object&apos;));</span><br><span class="line"></span><br><span class="line">console.log(util.isNull(&apos;Null&apos;));</span><br><span class="line"></span><br><span class="line">console.log(util.isFunction(&apos;Function&apos;));</span><br><span class="line"></span><br><span class="line">/*输出=&gt;</span><br><span class="line"></span><br><span class="line">&#123; isString: [Function],</span><br><span class="line"></span><br><span class="line">  isObject: [Function],</span><br><span class="line"></span><br><span class="line">  isNull: [Function],</span><br><span class="line"></span><br><span class="line">  isFunction: [Function] &#125;</span><br><span class="line"></span><br><span class="line">true</span><br><span class="line"></span><br><span class="line">false</span><br><span class="line"></span><br><span class="line">false</span><br><span class="line"></span><br><span class="line">false</span><br><span class="line"></span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h2 id="3-1-回调函数底层原理"><a href="#3-1-回调函数底层原理" class="headerlink" title="3.1 回调函数底层原理"></a>3.1 回调函数底层原理</h2><blockquote><p>回调函数(不一定是异步的)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 预置参数 lodash after</span><br><span class="line"></span><br><span class="line">function after(times,callback) &#123;</span><br><span class="line"></span><br><span class="line">  console.log(&apos;111****:&apos;+times);</span><br><span class="line"></span><br><span class="line">  return function () &#123;</span><br><span class="line"></span><br><span class="line">    console.log(&apos;222+++:&apos;+times);</span><br><span class="line"></span><br><span class="line">    if(--times === 0)&#123;</span><br><span class="line"></span><br><span class="line">      console.log(&apos;333====:&apos;+times);</span><br><span class="line"></span><br><span class="line">      callback()</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let eat = after(3,function () &#123;</span><br><span class="line"></span><br><span class="line">  console.log(&apos;吃完了&apos;)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">eat();</span><br><span class="line"></span><br><span class="line">eat();</span><br><span class="line"></span><br><span class="line">eat();</span><br><span class="line"></span><br><span class="line">/*输出=&gt;</span><br><span class="line"></span><br><span class="line">111****:3</span><br><span class="line"></span><br><span class="line">222+++:3</span><br><span class="line"></span><br><span class="line">222+++:2</span><br><span class="line"></span><br><span class="line">222+++:1</span><br><span class="line"></span><br><span class="line">333====:0</span><br><span class="line"></span><br><span class="line">吃完了</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">after(3,function () &#123;console.log(&apos;吃完了&apos;)&#125;)();</span><br><span class="line"></span><br><span class="line">after(3,function () &#123;console.log(&apos;吃完了&apos;)&#125;)();</span><br><span class="line"></span><br><span class="line">after(3,function () &#123;console.log(&apos;吃完了&apos;)&#125;)();</span><br><span class="line"></span><br><span class="line">/*输出=&gt;</span><br><span class="line"></span><br><span class="line">111****:3</span><br><span class="line"></span><br><span class="line">222+++:3</span><br><span class="line"></span><br><span class="line">111****:3</span><br><span class="line"></span><br><span class="line">222+++:3</span><br><span class="line"></span><br><span class="line">111****:3</span><br><span class="line"></span><br><span class="line">222+++:3</span><br><span class="line"></span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="3-1-1-回调函数的缺点"><a href="#3-1-1-回调函数的缺点" class="headerlink" title="3.1.1 回调函数的缺点"></a>3.1.1 回调函数的缺点</h3><blockquote><p>1) 异步方法如果出错了不能捕获try/catch错误</p></blockquote><blockquote><p>2) 获取的结果不能通过return返回</p></blockquote><blockquote><p>3) 回调函数可能会产生 (回调地狱)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//cat 1.txt =&gt; 模板</span><br><span class="line"></span><br><span class="line">//cat 2.txt =&gt; 数据</span><br><span class="line"></span><br><span class="line">// 我们可以引用一个模块 操作文件</span><br><span class="line"></span><br><span class="line">let fs = require(&apos;fs&apos;);</span><br><span class="line"></span><br><span class="line">// 相当于两个异步请求 有关系 关系是第二个请求 是依赖于第一个的</span><br><span class="line"></span><br><span class="line">fs.readFile(&apos;./1.txt&apos;, &apos;utf8&apos;, function (err, a) &#123; // error-first</span><br><span class="line"></span><br><span class="line">    fs.readFile(&apos;./2.txt&apos;, &apos;utf8&apos;, function (err, b) &#123; // error-first</span><br><span class="line"></span><br><span class="line">        console.log(a, b)</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/*输出=&gt;</span><br><span class="line"></span><br><span class="line">模板 数据</span><br><span class="line"></span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="3-1-2-同时两个异步请求问题的规避"><a href="#3-1-2-同时两个异步请求问题的规避" class="headerlink" title="3.1.2 同时两个异步请求问题的规避"></a>3.1.2 同时两个异步请求问题的规避</h3><blockquote><p>两个异步请求 同时拿到两个异步请求的结果</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">after</span>(<span class="params">times,callback</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> arr = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123; <span class="comment">// args = [1,2,3]</span></span><br><span class="line"></span><br><span class="line">        arr.push(data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(--times === <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">            callback(arr);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> out = after(<span class="number">2</span>,<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123; <span class="comment">// []</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fs.readFile(<span class="string">'./1.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, a</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    out(a);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">fs.readFile(<span class="string">'./2.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, b</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    out(b);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出=&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[ '模板', '数据' ]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="3-1-3-回调函数及发布订阅原理代码演示"><a href="#3-1-3-回调函数及发布订阅原理代码演示" class="headerlink" title="3.1.3 回调函数及发布订阅原理代码演示"></a>3.1.3 回调函数及发布订阅原理代码演示</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发布(这件事发生时 我要依次执行) 订阅(我预先想到的事)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> events = &#123;</span><br><span class="line"></span><br><span class="line">  cbs:[],</span><br><span class="line"></span><br><span class="line">  results:[],</span><br><span class="line"></span><br><span class="line">  on(cb)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.cbs.push(cb);</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  emit(data)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.results.push(data);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// this.cbs.forEach(fn =&gt; fn(this.results))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.cbs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">fn</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fn(<span class="keyword">this</span>.results); <span class="comment">//这种方式是箭头函数的简写</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// fn(this.results);</span></span><br><span class="line"></span><br><span class="line">    &#125;.bind(<span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">events.on(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123; <span class="comment">// 订阅的过程</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// if(data.length === 2)&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events.on(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123; <span class="comment">// 订阅的过程</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(data+<span class="string">' =&gt; 很棒'</span>);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fs.readFile(<span class="string">'./1.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, a</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">   events.emit(a);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">fs.readFile(<span class="string">'./2.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, b</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  events.emit(b);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 输出=&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[ '模板' ]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">模板 =&gt; 很棒</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[ '模板', '数据' ]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">模板,数据 =&gt; 很棒</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;1-1开篇&quot;&gt;&lt;a href=&quot;#1-1开篇&quot; class=&quot;headerlink&quot; title=&quot;1.1开篇&quot;&gt;&lt;/a&gt;1.1开篇&lt;/h2&gt;&lt;h3 id=&quot;1-1-1-编辑器&quot;&gt;&lt;a href=&quot;#1-1-1-编辑器&quot; class=&quot;h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>02课件3_3-6.promise基础应用及链式写法和实现和promise其他用法</title>
    <link href="http://www.arunyang.com/2018/06/17/002%E8%AF%BE%E4%BB%B63_3-6.promise%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8%E5%8F%8A%E9%93%BE%E5%BC%8F%E5%86%99%E6%B3%95%E5%92%8C%E5%AE%9E%E7%8E%B0%E5%92%8Cpromise%E5%85%B6%E4%BB%96%E7%94%A8%E6%B3%95/"/>
    <id>http://www.arunyang.com/2018/06/17/002课件3_3-6.promise基础应用及链式写法和实现和promise其他用法/</id>
    <published>2018-06-17T13:59:26.000Z</published>
    <updated>2018-06-26T00:54:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="1-1实现promise"><a href="#1-1实现promise" class="headerlink" title="1.1实现promise"></a>1.1实现promise</h2><blockquote><p>Promises/A+规范官网<br><strong><a href="https://promisesaplus.com/" target="_blank" rel="noopener">https://promisesaplus.com/</a></strong></p></blockquote><h3 id="1-1-1-promise特性一"><a href="#1-1-1-promise特性一" class="headerlink" title="1.1.1 promise特性一"></a>1.1.1 promise特性一</h3><blockquote><p>promise会立即执行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line"><span class="comment">/*输出=&gt;</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="1-1-2-promise特性二及几个状态"><a href="#1-1-2-promise特性二及几个状态" class="headerlink" title="1.1.2 promise特性二及几个状态"></a>1.1.2 promise特性二及几个状态</h3><blockquote><p>(1)promise 本意 承诺 三个状态 成功态 失败态 等待态<br>(2)默认是等待态 等待态可以变成 成功态/失败态<br>(3)成功就不能失败 也不能 从失败变成成功<br>(4)在低版本浏览器 不支持的 es6-promise<br>(5)executor是立即执行的<br>(6)每个promise实例都有一个then方法,参数是成功和失败，成功会有成功的值 失败<br>(7) 同一个promise可以多次then<br>// Promise是一个类<br>// new Promise时 会传递一个执行器<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// resolve('hello'); //成功和错误只能执行一个</span></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        reject(<span class="string">'错误'</span>);</span><br><span class="line">    &#125;,<span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line">promise.then(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123; <span class="comment">//一个promise可以then多次</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'data'</span>,data);</span><br><span class="line">&#125;,(err)=&gt;&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'err'</span>,err);</span><br><span class="line">&#125;);</span><br><span class="line">promise.then(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'data'</span>,data);</span><br><span class="line">&#125;,(err)=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'err'</span>,err);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">err 错误 //等3秒再执行</span></span><br><span class="line"><span class="comment">err 错误</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="1-1-3-手写promise实现"><a href="#1-1-3-手写promise实现" class="headerlink" title="1.1.3 手写promise实现"></a>1.1.3 手写promise实现</h3><blockquote><p>代码同上<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//cat 3.promise.js</span></span><br><span class="line"><span class="comment">//1.实现基本的promise</span></span><br><span class="line"><span class="keyword">let</span> <span class="built_in">Promise</span> = <span class="built_in">require</span>(<span class="string">'./Promise'</span>)</span><br><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    resolve(<span class="string">'买'</span>);</span><br><span class="line">    <span class="comment">// reject('不买'); //成功和错误只能执行一个</span></span><br><span class="line">&#125;);</span><br><span class="line">promise.then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'data'</span>, data);</span><br><span class="line">&#125;, (err) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'err'</span>, err);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">promise.then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'data'</span>, data);</span><br><span class="line">&#125;, (err) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'err'</span>, err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>实现原生Promise<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Promise</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(executor) &#123;</span><br><span class="line">    <span class="comment">// 默认的状态</span></span><br><span class="line">    <span class="keyword">this</span>.status = <span class="string">'pending'</span>;</span><br><span class="line">    <span class="comment">// 原因</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">this</span>.reason = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="comment">// 成功存放的数组</span></span><br><span class="line">    <span class="keyword">this</span>.onResolvedCallbacks = [];</span><br><span class="line">    <span class="comment">// 失败存放的数组</span></span><br><span class="line">    <span class="keyword">this</span>.onRejectedCallbacks = [];</span><br><span class="line">    <span class="comment">// 默认让执行器执行</span></span><br><span class="line">    <span class="keyword">let</span> resolve = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'pending'</span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.status = <span class="string">'resolved'</span>; <span class="comment">// 成功了,只能是成功状态,不会执行失败的状态</span></span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> reject = <span class="function">(<span class="params">reason</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.status === <span class="string">'pending'</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.status = <span class="string">'rejected'</span>; <span class="comment">// 失败了,只能是失败状态,不会执行成功的状态</span></span><br><span class="line">        <span class="keyword">this</span>.reason = reason;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    executor(resolve,reject);</span><br><span class="line">  &#125;</span><br><span class="line">  then(onFufilled,onRejected)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'resolved'</span>)&#123;</span><br><span class="line">      onFufilled(<span class="keyword">this</span>.value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.status === <span class="string">'rejected'</span>) &#123;</span><br><span class="line">      onRejected(<span class="keyword">this</span>.reason);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="built_in">Promise</span>;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="1-1-4-手写promise实现之发布订阅模式"><a href="#1-1-4-手写promise实现之发布订阅模式" class="headerlink" title="1.1.4 手写promise实现之发布订阅模式"></a>1.1.4 手写promise实现之发布订阅模式</h3><blockquote><p>cat 1.同步promise.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"1"</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="built_in">Promise</span>  = <span class="built_in">require</span>(<span class="string">'./Promise'</span>)</span><br><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"3"</span>);</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// resolve('买');</span></span><br><span class="line">    reject(<span class="string">'不买'</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">promise.then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'data'</span>, data);</span><br><span class="line">&#125;, (err) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'err'</span>, err);</span><br><span class="line">&#125;);</span><br><span class="line">promise.then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'data'</span>, data);</span><br><span class="line">&#125;, (err) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'err'</span>, err);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"2"</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">00000</span></span><br><span class="line"><span class="comment">00000   //过1秒钟再执行下面的</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">err 不买</span></span><br><span class="line"><span class="comment">err 不买</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>实现<br>cat Promise.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Promise</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(executor) &#123;</span><br><span class="line">    <span class="keyword">this</span>.status = <span class="string">'pending'</span>;</span><br><span class="line">    <span class="keyword">this</span>.value = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">this</span>.reason = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">this</span>.onResolvedCallbacks = [];</span><br><span class="line">    <span class="keyword">this</span>.onRejectedCallbacks = [];</span><br><span class="line">    <span class="keyword">let</span> resolve = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'pending'</span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.status = <span class="string">'resolved'</span>;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">        <span class="keyword">this</span>.onResolvedCallbacks.forEach(<span class="function"><span class="params">fn</span>=&gt;</span>fn());     <span class="comment">//调用成功的状态</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> reject = <span class="function">(<span class="params">reason</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.status === <span class="string">'pending'</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.status = <span class="string">'rejected'</span>;</span><br><span class="line">        <span class="keyword">this</span>.reason = reason;</span><br><span class="line">        <span class="keyword">this</span>.onRejectedCallbacks.forEach(<span class="function"><span class="params">fn</span> =&gt;</span> fn());   <span class="comment">//调用失败的状态</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    executor(resolve,reject);</span><br><span class="line">  &#125;</span><br><span class="line">  then(onFufilled,onRejected)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'resolved'</span>)&#123;</span><br><span class="line">      onFufilled(<span class="keyword">this</span>.value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.status === <span class="string">'rejected'</span>) &#123;</span><br><span class="line">      onRejected(<span class="keyword">this</span>.reason);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">this</span>.status === <span class="string">'pending'</span>)&#123;       <span class="comment">//发布订阅模式</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"00000"</span>);</span><br><span class="line">      <span class="keyword">this</span>.onResolvedCallbacks.push(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        onFufilled(<span class="keyword">this</span>.value);           <span class="comment">//一旦成功进入这个状态</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">this</span>.onRejectedCallbacks.push(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        onRejected(<span class="keyword">this</span>.reason);          <span class="comment">//一旦失败进入这个状态</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="built_in">Promise</span>;</span><br></pre></td></tr></table></figure></p></blockquote><p>##1.2 原生promise</p><p>###1.2.1 promise解决回调地狱</p><blockquote><p>准备<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#cat 1.txt</span><br><span class="line">2.txt</span><br><span class="line">#cat 2.txt</span><br><span class="line">数据</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>代码详解<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1) 解决回调地狱</span></span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params">path, encoding</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// throw new Error('xxx');  //如果promise内部有错误,它也会走失败.</span></span><br><span class="line">    fs.readFile(path, encoding, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) <span class="keyword">return</span> reject(err); <span class="comment">//这里return加不加都行,一旦失败就不会成功了</span></span><br><span class="line">      resolve(data);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 成功的回调 或者失败的回调执行后可以返回一个promise</span></span><br><span class="line"><span class="comment">// 会将这个promise的执行结果传递给下一次then中</span></span><br><span class="line"><span class="comment">// 如果返回一个普通的值 ，会将这个普通值传递到下一次then的成功的参数</span></span><br><span class="line">read(<span class="string">'./1.txt'</span>, <span class="string">'utf8'</span>).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);          <span class="comment">//输出=&gt;2.txt</span></span><br><span class="line">    <span class="keyword">return</span> read(data, <span class="string">'utf8'</span>)</span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);          <span class="comment">//输出=&gt; 数据</span></span><br><span class="line">    <span class="keyword">return</span> [data];</span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);            <span class="comment">//输出=&gt; [ '数据' ],这里返回值为undefined,所以下一句输出undefined</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);            <span class="comment">//输出=&gt; undefined</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'xxx'</span>);</span><br><span class="line">&#125;)</span><br><span class="line">    <span class="comment">// .then()</span></span><br><span class="line">    .then(<span class="literal">null</span>,err=&gt;&#123;             <span class="comment">//直接进入失败分支,不会走前面的null分支(什么都不执行)</span></span><br><span class="line">  <span class="built_in">console</span>.log(err);             <span class="comment">//打印错误行数,没有返回值即返回是undefined,undefined也是普通值,所以它认为也是成功</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">    .then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'成功'</span>);           <span class="comment">//输出=&gt; 成功</span></span><br><span class="line">&#125;).catch(<span class="function"><span class="params">err</span>=&gt;</span>&#123;                 <span class="comment">//一旦出错用这个捕获,它会找最近的,剩下的处理不了的都可以用catch来捕获</span></span><br><span class="line">  <span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></blockquote><p>输出=&gt;<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2.txt</span><br><span class="line">数据</span><br><span class="line">[ '数据' ]</span><br><span class="line">undefined</span><br><span class="line">Error: xxx</span><br><span class="line">    at read.then.then.then.then.data (/Users/00arunalldata00/007_studycoding/008_everest/20180609/003/promise-public-6-9/1.case.js:25:9)</span><br><span class="line">成功</span><br></pre></td></tr></table></figure></p><blockquote><p> .then() 什么都不传使用catch捕获<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1) 解决回调地狱</span></span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params">path, encoding</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// throw new Error('xxx');</span></span><br><span class="line">    fs.readFile(path, encoding, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) <span class="keyword">return</span> reject(err);</span><br><span class="line">      resolve(data);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read(<span class="string">'./1.txt'</span>, <span class="string">'utf8'</span>).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">    <span class="keyword">return</span> read(data, <span class="string">'utf8'</span>)</span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">    <span class="keyword">return</span> [data];</span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'xxx'</span>);</span><br><span class="line">&#125;)</span><br><span class="line">    .then()         <span class="comment">//什么都不传</span></span><br><span class="line">    <span class="comment">// .then(null,err=&gt;&#123;             //直接进入失败分支,不会走前面的null分支(什么都不执行)</span></span><br><span class="line">  <span class="comment">// console.log(err);             //打印错误行数,没有返回值即返回是undefined,undefined也是普通值,所以它认为也是成功</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">    .then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'成功'</span>);</span><br><span class="line">&#125;).catch(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></blockquote><p>输出=&gt;<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2.txt</span><br><span class="line">数据</span><br><span class="line">[ '数据' ]</span><br><span class="line">undefined</span><br><span class="line">Error: xxx</span><br><span class="line">    at read.then.then.then.then.data (/Users/00arunalldata00/007_studycoding/008_everest/20180609/003/promise-public-6-9/1.case.js:23:9)</span><br></pre></td></tr></table></figure></p><p>###1.2.2 promise穿透</p><blockquote><p>穿透的几种简写<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="built_in">Promise</span> = <span class="built_in">require</span>(<span class="string">'./Promise'</span>);</span><br><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    resolve(<span class="string">'hello'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 成功不写的时候 默认就是value =&gt; value</span></span><br><span class="line"><span class="comment">// 失败不写默认返回 err=&gt;&#123;throw err&#125;</span></span><br><span class="line">promise.then()</span><br><span class="line"><span class="comment">//等同于</span></span><br><span class="line"><span class="comment">// promise.then(function (data) &#123;return data&#125;)</span></span><br><span class="line"><span class="comment">//等同于</span></span><br><span class="line"><span class="comment">// promise.then(data =&gt; data)</span></span><br><span class="line">.then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;,err=&gt;&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'err'</span>,err);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//输出=&gt; hello</span></span><br></pre></td></tr></table></figure></p></blockquote><p>###1.2.3 promise A+测试规范<br><code>npm install  promises-aplus-tests -g</code> 全局安装<br>➜  promise-public-6-9 git:(master) ✗ <strong>promises-aplus-tests Promise.js</strong>    #执行是否符合promiseA+检测<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  The value is `1` with `Number.prototype` modified to have a `then` method</span><br><span class="line">    ✓ already-fulfilled</span><br><span class="line">    ✓ immediately-fulfilled</span><br><span class="line">    ✓ eventually-fulfilled</span><br><span class="line">    ✓ already-rejected</span><br><span class="line">    ✓ immediately-rejected</span><br><span class="line">    ✓ eventually-rejected</span><br><span class="line">872 passing (24s)</span><br></pre></td></tr></table></figure></p><h2 id="2-1-promise其他用法"><a href="#2-1-promise其他用法" class="headerlink" title="2.1 promise其他用法"></a>2.1 promise其他用法</h2><blockquote><p>自己实现的promise<br>cat Promise.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">class Promise &#123;</span><br><span class="line">  constructor(executor) &#123;</span><br><span class="line">    this.status = &apos;pending&apos;;</span><br><span class="line">    this.value = undefined;</span><br><span class="line">    this.reason = undefined;</span><br><span class="line">    this.onResolvedCallbacks = [];</span><br><span class="line">    this.onRejectedCallbacks = [];</span><br><span class="line">    let resolve = (value) =&gt; &#123;</span><br><span class="line">      if (this.status === &apos;pending&apos;) &#123;</span><br><span class="line">        this.status = &apos;resolved&apos;;</span><br><span class="line">        this.value = value;</span><br><span class="line">        this.onResolvedCallbacks.forEach(fn =&gt; fn());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    let reject = (reason) =&gt; &#123;</span><br><span class="line">      if (this.status === &apos;pending&apos;) &#123;</span><br><span class="line">        this.status = &apos;rejected&apos;;</span><br><span class="line">        this.reason = reason;</span><br><span class="line">        this.onRejectedCallbacks.forEach(fn =&gt; fn());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    try &#123;</span><br><span class="line">      executor(resolve, reject);</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">      reject(e); // 如果出现异常就走错误处理</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  then(onFufilled, onRejected) &#123;</span><br><span class="line">    // 默认成功和失败不传的情况</span><br><span class="line">    onFufilled = typeof onFufilled === &apos;function&apos; ? onFufilled : value =&gt; value;</span><br><span class="line">    onRejected = typeof onRejected === &apos;function&apos; ? onRejected : err =&gt; &#123; throw err &#125;</span><br><span class="line">    let promise2;</span><br><span class="line">    promise2 = new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      if (this.status === &apos;resolved&apos;) &#123;</span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">          try &#123;</span><br><span class="line">            let x = onFufilled(this.value);</span><br><span class="line">            resolvePromise(promise2, x, resolve, reject);</span><br><span class="line">          &#125; catch (e) &#123;</span><br><span class="line">            reject(e);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, 0);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      if (this.status === &apos;rejected&apos;) &#123;</span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">          try &#123;</span><br><span class="line">            let x = onRejected(this.reason);</span><br><span class="line">            resolvePromise(promise2, x, resolve, reject);</span><br><span class="line">          &#125; catch (e) &#123;</span><br><span class="line">            reject(e);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, 0);</span><br><span class="line">      &#125;</span><br><span class="line">      if (this.status === &apos;pending&apos;) &#123;</span><br><span class="line">        this.onResolvedCallbacks.push(() =&gt; &#123;</span><br><span class="line">          setTimeout(() =&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">              let x = onFufilled(this.value);</span><br><span class="line">              resolvePromise(promise2, x, resolve, reject);</span><br><span class="line">            &#125; catch (e) &#123;</span><br><span class="line">              reject(e);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, 0);</span><br><span class="line">        &#125;);</span><br><span class="line">        this.onRejectedCallbacks.push(() =&gt; &#123;</span><br><span class="line">          setTimeout(() =&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">              let x = onRejected(this.reason);</span><br><span class="line">              resolvePromise(promise2, x, resolve, reject);</span><br><span class="line">            &#125; catch (e) &#123;</span><br><span class="line">              reject(e);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, 0);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    return promise2;</span><br><span class="line">  &#125;</span><br><span class="line">  catch(fn)&#123;</span><br><span class="line">    return this.then(null,fn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">Promise.all = (promises) =&gt; &#123;</span><br><span class="line">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">    let result = [];</span><br><span class="line">    let index = 0;</span><br><span class="line">    let processData = (key, y) =&gt; &#123;</span><br><span class="line">      index++</span><br><span class="line">      result[key] = y;</span><br><span class="line">      if (promises.length === index) &#123;</span><br><span class="line">        resolve(result);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for (let i = 0; i &lt; promises.length; i++) &#123;</span><br><span class="line">      promises[i].then(y =&gt; &#123;</span><br><span class="line">        processData(i, y);</span><br><span class="line">      &#125;, reject);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">Promise.race =(promises) =&gt; &#123;</span><br><span class="line">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">    for (let i = 0; i &lt; promises.length; i++) &#123;</span><br><span class="line">      promises[i].then(resolve, reject);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">Promise.resolve = function (data) &#123;</span><br><span class="line">  return new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">    resolve(data);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">Promise.reject = function (data) &#123;</span><br><span class="line">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">    reject(data);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">// 实现多套promise共用的情况</span><br><span class="line">function resolvePromise(promise2, x, resolve, reject) &#123;</span><br><span class="line">  if (promise2 === x) &#123;</span><br><span class="line">    return reject(new TypeError(&apos;循环引用&apos;));</span><br><span class="line">  &#125;</span><br><span class="line">  // &#123;then:&#123;&#125;&#125;</span><br><span class="line">  let called;</span><br><span class="line">  if (x != null &amp;&amp; (typeof x === &apos;object&apos; || typeof x === &apos;function&apos;)) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      let then = x.then; // 如果是对象 我就试着取一下then方法</span><br><span class="line">      if (typeof then === &apos;function&apos;) &#123; // 就是promise了</span><br><span class="line">        then.call(x, y =&gt; &#123;</span><br><span class="line">          // 成功和失败只能调用一个</span><br><span class="line">          if (called) return;</span><br><span class="line">          called = true;</span><br><span class="line">          // resolve的结果依旧是promise 那就继续解析</span><br><span class="line">          resolvePromise(promise2, y, resolve, reject);</span><br><span class="line">        &#125;, r =&gt; &#123;</span><br><span class="line">          if (called) return;</span><br><span class="line">          called = true;</span><br><span class="line">          reject(r);// 失败了就失败了</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        resolve(x); // 直接成功即可</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">      if (called) return;</span><br><span class="line">      called = true;</span><br><span class="line">      reject(e); // 取then出错了那就不要在继续执行了</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    resolve(x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 目前是通过他测试 他会测试一个对象</span><br><span class="line">// 语法糖</span><br><span class="line">Promise.defer = Promise.deferred = function () &#123;</span><br><span class="line">  let dfd = &#123;&#125;</span><br><span class="line">  dfd.promise = new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">    dfd.resolve = resolve;</span><br><span class="line">    dfd.reject = reject;</span><br><span class="line">  &#125;);</span><br><span class="line">  return dfd;</span><br><span class="line">&#125;</span><br><span class="line">module.exports = Promise;</span><br><span class="line">// npm install  promises-aplus-tests -g</span><br><span class="line">// promises-aplus-tests</span><br></pre></td></tr></table></figure></p></blockquote><p>###2.1.1 defer源码实现及用法.js</p><blockquote><p>引用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">// Q库</span></span><br><span class="line"><span class="keyword">let</span> <span class="built_in">Promise</span> = <span class="built_in">require</span>(<span class="string">'./Promise.js'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params">path, encoding</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> dfd = <span class="built_in">Promise</span>.defer();</span><br><span class="line">  fs.readFile(path, encoding, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> dfd.reject(err);</span><br><span class="line">    dfd.resolve(data);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> dfd.promise;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read(<span class="string">'1.txt'</span>,<span class="string">'utf8'</span>).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;)<span class="comment">//输出=&gt; 2.txt</span></span><br></pre></td></tr></table></figure></p></blockquote><p>###2.1.2 catch源码实现及用法.js</p><blockquote><p>引用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">let Promise = require(&apos;./Promise&apos;)</span><br><span class="line">let promise = new Promise((resove,reject)=&gt;&#123;</span><br><span class="line">  reject(&apos;错误&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">// 当前catch里只接受错误</span><br><span class="line">promise.then(null).catch(err=&gt;&#123;</span><br><span class="line">  console.log(&apos;2&apos;,err);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Promise.resolve(&apos;123&apos;).then(data=&gt;&#123;</span><br><span class="line">  console.log(data);</span><br><span class="line">&#125;)</span><br><span class="line">// 实现promise finaly是如何实现的</span><br><span class="line">/* 输出=&gt;</span><br><span class="line">123</span><br><span class="line">2 错误</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></p></blockquote><p>###2.1.3 All方法源码实现及用法.js</p><blockquote><p>引用<br>面试:<code>如何实现all和race源码</code><br>all:所有方法都成功才成功,否则失败。race为一个成功就成功,一个失败就失败。这里new promise用的是原生的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params">path, encoding</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    fs.readFile(path, encoding, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) <span class="keyword">return</span> reject(err);</span><br><span class="line">      resolve(data);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">all</span>(<span class="params">promises</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">let</span> index =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> processData = <span class="function">(<span class="params">key, y</span>) =&gt;</span> &#123;</span><br><span class="line">      index++               <span class="comment">//每处理一次+1</span></span><br><span class="line">      result[key] = y;</span><br><span class="line">      <span class="keyword">if</span> (promises.length === index)&#123;</span><br><span class="line">        resolve(result);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; promises.length; i++) &#123;</span><br><span class="line">      promises[i].then(<span class="function"><span class="params">y</span> =&gt;</span> &#123;   <span class="comment">//使用then调用promise的all里面的方法</span></span><br><span class="line">        processData(i, y);      <span class="comment">//i为位置,y为函数的返回值</span></span><br><span class="line">      &#125;, reject);               <span class="comment">//失败直接reject</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//race为一个成功就成功,一个失败就失败</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">race</span>(<span class="params">promises</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; promises.length; i++) &#123;</span><br><span class="line">      promises[i].then(resolve, reject);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">all([read(<span class="string">'1.txt'</span>, <span class="string">'utf8'</span>), read(<span class="string">'2.txt'</span>, <span class="string">'utf8'</span>)]).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;, err =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)<span class="comment">//输出=&gt; [ '2.txt', '数据' ]</span></span><br><span class="line"></span><br><span class="line">race([read(<span class="string">'1.txt'</span>, <span class="string">'utf8'</span>), read(<span class="string">'2.txt'</span>, <span class="string">'utf8'</span>)]).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;, err =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)<span class="comment">//输出=&gt; 2.txt</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">cat 1.txt</span></span><br><span class="line"><span class="comment">2.txt</span></span><br><span class="line"><span class="comment">cat 2.txt</span></span><br><span class="line"><span class="comment">数据</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p></blockquote><p>###2.1.4 promisify及promisifyAll使每个方法都会多一个promise的方法</p><blockquote><p>实现,参考bluebird这个库<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// npm install bluebird</span></span><br><span class="line"><span class="comment">// let bluebird = require('bluebird');</span></span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">promisifyAll</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// console.log(Object.keys(obj));   //可以拿到obj下面的所有方法,所有方法变成数组</span></span><br><span class="line">  <span class="built_in">Object</span>.keys(obj).forEach(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> obj[item] === <span class="string">'function'</span>)&#123;</span><br><span class="line">      <span class="comment">// 把每一个函数 都promise化一下 ，每个方法都会多一个promise的方法</span></span><br><span class="line">      obj[item + <span class="string">'Async'</span>] = promisify(obj[item]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">promisifyAll(fs);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">promisify</span>(<span class="params">readFile</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">...args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">      readFile(...args,<span class="function"><span class="keyword">function</span> (<span class="params">err,data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err) reject(err);</span><br><span class="line">        resolve(data);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// let read = promisify(fs.readFile); // 就会返回一个promise方法</span></span><br><span class="line">fs.readFileAsync(<span class="string">'1.txt'</span>,<span class="string">'utf8'</span>).then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;)<span class="comment">//输出=&gt; 2.txt</span></span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;1-1实现promise&quot;&gt;&lt;a href=&quot;#1-1实现promise&quot; class=&quot;headerlink&quot; title=&quot;1.1实现promise&quot;&gt;&lt;/a&gt;1.1实现promise&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Prom
      
    
    </summary>
    
    
  </entry>
  
</feed>
